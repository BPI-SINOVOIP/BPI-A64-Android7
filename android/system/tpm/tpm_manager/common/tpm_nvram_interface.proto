//
// Copyright (C) 2015 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

option optimize_for = LITE_RUNTIME;
package tpm_manager;

import "tpm_manager_status.proto";

// The messages in this file correspond to the D-Bus interface for accessing
// Tpm backed Nvram.

// Input for the DefineNvram method.
message DefineNvramRequest {
  optional int32 index = 1;
  optional int32 length = 2;
}

// Output for the DefineNvram method.
message DefineNvramReply {
  optional TpmManagerStatus status = 1;
}

// Input for the DestroyNvram method.
message DestroyNvramRequest {
  optional int32 index = 1;
}

// Output for the DestroyNvram method.
message DestroyNvramReply {
  optional TpmManagerStatus status = 1;
}

// Input for the WriteNvram method.
message WriteNvramRequest {
  optional int32 index = 1;
  optional bytes data = 2;
}

// Output for the WriteNvram method.
message WriteNvramReply {
  optional TpmManagerStatus status = 1;
}

// Input for the ReadNvram method.
message ReadNvramRequest {
  optional int32 index = 1;
}

// Output for the ReadNvram method.
message ReadNvramReply {
  optional TpmManagerStatus status = 1;
  optional bytes data = 2;
}

// Input for the IsNvramDefined method.
message IsNvramDefinedRequest {
  optional int32 index = 1;
}

// Output for the IsNvramDefined method.
message IsNvramDefinedReply {
  optional TpmManagerStatus status = 1;
  optional bool is_defined = 2;
}

// Input for the IsNvramLocked method.
message IsNvramLockedRequest {
  optional int32 index = 1;
}

// Output for the IsNvramLocked method.
message IsNvramLockedReply {
  optional TpmManagerStatus status = 1;
  optional bool is_locked = 2;
}

// Input for the GetNvramSize method.
message GetNvramSizeRequest {
  optional int32 index = 1;
}

// Output for the GetNvramSize method.
message GetNvramSizeReply {
  optional TpmManagerStatus status = 1;
  optional int32 size = 2;
}
