//
// Copyright (C) 2015 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

option optimize_for = LITE_RUNTIME;
package tpm_manager;

import "local_data.proto";
import "tpm_manager_status.proto";

// The messages in this file correspond to the D-Bus interface to handle
// ownership of the Tpm.

// Input for the GetTpmStatus method.
message GetTpmStatusRequest {
}

// Output from the GetTpmStatus method.
message GetTpmStatusReply {
  optional TpmManagerStatus status = 1;
  // Whether a TPM is enabled on the system.
  optional bool enabled = 2;
  // Whether the TPM has been owned.
  optional bool owned = 3;
  // Local TPM management data (including the owner password if available).
  optional LocalData local_data = 4;
  // The current dictionary attack counter value.
  optional int32 dictionary_attack_counter = 5;
  // The current dictionary attack counter threshold.
  optional int32 dictionary_attack_threshold = 6;
  // Whether the TPM is in some form of dictionary attack lockout.
  optional bool dictionary_attack_lockout_in_effect = 7;
  // The number of seconds remaining in the lockout.
  optional int32 dictionary_attack_lockout_seconds_remaining = 8;
}

// Input for the TakeOwnership method.
message TakeOwnershipRequest {
}

// Output from the TakeOwnership method.
message TakeOwnershipReply {
  optional TpmManagerStatus status = 1;
}

// Input for the RemoveOwnerDependency method.
message RemoveOwnerDependencyRequest {
  optional bytes owner_dependency = 1;
}

// Output for the RemoveOwnerDependency method.
message RemoveOwnerDependencyReply {
  optional TpmManagerStatus status = 1;
}
