<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2013 The Android Open Source Project

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<sample>
    <name>NetworkConnect</name>
    <group>Connectivity</group>
    <package>com.example.android.networkconnect</package>



    <!-- change minSdk if needed-->
    <minSdk>8</minSdk>


    <strings>
        <intro>
            <![CDATA[
            This sample demonstrates how to connect to the network and fetch raw HTML using
            HttpURLConnection. AsyncTask is used to perform the fetch on a background thread.
            ]]>
        </intro>
    </strings>

    <template src="base"/>
    <common src="logger"/>

    <metadata>
        <status>PUBLISHED</status>
        <categories>Connectivity</categories>
        <technologies>Android</technologies>
        <languages>Java</languages>
        <solutions>Mobile</solutions>
        <level>INTERMEDIATE</level>
        <icon>screenshots/icon-web.png</icon>
        <screenshots>
            <img>screenshots/main.png</img>
        </screenshots>
        <api_refs>
            <android>android.os.AsyncTask</android>
        </api_refs>

        <description>
            <![CDATA[
This sample demonstrates how to connect to the network and fetch raw HTML using
HttpURLConnection. AsyncTask is used to perform the fetch on a background thread.
            ]]>
        </description>

        <intro>
            <![CDATA[
This sample application demonstrates how to connect to the network and fetch raw
HTML. It uses AsyncTask, a background task manager, to perform the network fetch
on a background thread. By using AsyncTask, the app can avoid hanging on the UI
thread, and instead update the UI when the response is ready. To establish the
network connection, the sample uses HttpURLConnection.
            ]]>
        </intro>
    </metadata>

</sample>
