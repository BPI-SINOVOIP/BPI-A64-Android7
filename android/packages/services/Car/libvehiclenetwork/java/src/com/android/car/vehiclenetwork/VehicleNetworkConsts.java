
/*
 * Copyright (C) 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//Autogenerated from vehicle.h using libvehiclenetwork/tool/vehicle_code_gen.py.
//Do not modify manually.

package com.android.car.vehiclenetwork;

public class VehicleNetworkConsts {

public static final int VEHICLE_PROPERTY_INVALID = 0x0;
public static final int VEHICLE_PROPERTY_INFO_VIN = 0x00000100;
public static final int VEHICLE_PROPERTY_INFO_MAKE = 0x00000101;
public static final int VEHICLE_PROPERTY_INFO_MODEL = 0x00000102;
public static final int VEHICLE_PROPERTY_INFO_MODEL_YEAR = 0x00000103;
public static final int VEHICLE_PROPERTY_INFO_FUEL_CAPACITY = 0x00000104;
public static final int VEHICLE_PROPERTY_PERF_ODOMETER = 0x00000204;
public static final int VEHICLE_PROPERTY_PERF_VEHICLE_SPEED = 0x00000207;
public static final int VEHICLE_PROPERTY_ENGINE_COOLANT_TEMP = 0x00000301;
public static final int VEHICLE_PROPERTY_ENGINE_OIL_TEMP = 0x00000304;
public static final int VEHICLE_PROPERTY_ENGINE_RPM = 0x00000305;
public static final int VEHICLE_PROPERTY_GEAR_SELECTION = 0x00000400;
public static final int VEHICLE_PROPERTY_CURRENT_GEAR = 0x00000401;
public static final int VEHICLE_PROPERTY_PARKING_BRAKE_ON = 0x00000402;
public static final int VEHICLE_PROPERTY_DRIVING_STATUS = 0x00000404;
public static final int VEHICLE_PROPERTY_FUEL_LEVEL_LOW = 0x00000405;
public static final int VEHICLE_PROPERTY_NIGHT_MODE = 0x00000407;
public static final int VEHICLE_PROPERTY_HVAC_FAN_SPEED = 0x00000500;
public static final int VEHICLE_PROPERTY_HVAC_FAN_DIRECTION = 0x00000501;
public static final int VEHICLE_PROPERTY_HVAC_TEMPERATURE_CURRENT = 0x00000502;
public static final int VEHICLE_PROPERTY_HVAC_TEMPERATURE_SET = 0x00000503;
public static final int VEHICLE_PROPERTY_HVAC_DEFROSTER = 0x00000504;
public static final int VEHICLE_PROPERTY_HVAC_AC_ON = 0x00000505;
public static final int VEHICLE_PROPERTY_HVAC_MAX_AC_ON = 0x00000506;
public static final int VEHICLE_PROPERTY_HVAC_MAX_DEFROST_ON = 0x00000507;
public static final int VEHICLE_PROPERTY_HVAC_RECIRC_ON = 0x00000508;
public static final int VEHICLE_PROPERTY_HVAC_DUAL_ON = 0x00000509;
public static final int VEHICLE_PROPERTY_ENV_OUTSIDE_TEMPERATURE = 0x00000703;
public static final int VEHICLE_PROPERTY_ENV_CABIN_TEMPERATURE = 0x00000704;
public static final int VEHICLE_PROPERTY_RADIO_PRESET = 0x0000801;
public static final int VEHICLE_PROPERTY_AUDIO_FOCUS = 0x00000900;
public static final int VEHICLE_PROPERTY_AUDIO_VOLUME = 0x00000901;
public static final int VEHICLE_PROPERTY_AUDIO_VOLUME_LIMIT = 0x00000902;
public static final int VEHICLE_PROPERTY_AUDIO_ROUTING_POLICY = 0x00000903;
public static final int VEHICLE_PROPERTY_AUDIO_HW_VARIANT = 0x00000904;
public static final int VEHICLE_PROPERTY_AP_POWER_STATE = 0x00000A00;
public static final int VEHICLE_PROPERTY_DISPLAY_BRIGHTNESS = 0x00000A01;
public static final int VEHICLE_PROPERTY_AP_POWER_BOOTUP_REASON = 0x00000A02;
public static final int VEHICLE_PROPERTY_HW_KEY_INPUT = 0x00000A10;
public static final int VEHICLE_PROPERTY_INSTRUMENT_CLUSTER_INFO = 0x00000A20;
public static final int VEHICLE_PROPERTY_CUSTOM_START = 0x70000000;
public static final int VEHICLE_PROPERTY_CUSTOM_END = 0x73ffffff;
public static final int VEHICLE_PROPERTY_INTERNAL_START = 0x74000000;
public static final int VEHICLE_PROPERTY_INTERNAL_END = 0x74ffffff;
public static final int VEHICLE_PROPERTY_INTERNAL_AUDIO_STREAM_STATE = 0x74000000;
public static int getVehicleValueType(int property) {
switch (property) {
case VEHICLE_PROPERTY_INFO_VIN: return VehicleValueType.VEHICLE_VALUE_TYPE_STRING;
case VEHICLE_PROPERTY_INFO_MAKE: return VehicleValueType.VEHICLE_VALUE_TYPE_STRING;
case VEHICLE_PROPERTY_INFO_MODEL: return VehicleValueType.VEHICLE_VALUE_TYPE_STRING;
case VEHICLE_PROPERTY_INFO_MODEL_YEAR: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32;
case VEHICLE_PROPERTY_INFO_FUEL_CAPACITY: return VehicleValueType.VEHICLE_VALUE_TYPE_FLOAT;
case VEHICLE_PROPERTY_PERF_ODOMETER: return VehicleValueType.VEHICLE_VALUE_TYPE_FLOAT;
case VEHICLE_PROPERTY_PERF_VEHICLE_SPEED: return VehicleValueType.VEHICLE_VALUE_TYPE_FLOAT;
case VEHICLE_PROPERTY_ENGINE_COOLANT_TEMP: return VehicleValueType.VEHICLE_VALUE_TYPE_FLOAT;
case VEHICLE_PROPERTY_ENGINE_OIL_TEMP: return VehicleValueType.VEHICLE_VALUE_TYPE_FLOAT;
case VEHICLE_PROPERTY_ENGINE_RPM: return VehicleValueType.VEHICLE_VALUE_TYPE_FLOAT;
case VEHICLE_PROPERTY_GEAR_SELECTION: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32;
case VEHICLE_PROPERTY_CURRENT_GEAR: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32;
case VEHICLE_PROPERTY_PARKING_BRAKE_ON: return VehicleValueType.VEHICLE_VALUE_TYPE_BOOLEAN;
case VEHICLE_PROPERTY_DRIVING_STATUS: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32;
case VEHICLE_PROPERTY_FUEL_LEVEL_LOW: return VehicleValueType.VEHICLE_VALUE_TYPE_BOOLEAN;
case VEHICLE_PROPERTY_NIGHT_MODE: return VehicleValueType.VEHICLE_VALUE_TYPE_BOOLEAN;
case VEHICLE_PROPERTY_HVAC_FAN_SPEED: return VehicleValueType.VEHICLE_VALUE_TYPE_ZONED_INT32;
case VEHICLE_PROPERTY_HVAC_FAN_DIRECTION: return VehicleValueType.VEHICLE_VALUE_TYPE_ZONED_INT32;
case VEHICLE_PROPERTY_HVAC_TEMPERATURE_CURRENT: return VehicleValueType.VEHICLE_VALUE_TYPE_ZONED_FLOAT;
case VEHICLE_PROPERTY_HVAC_TEMPERATURE_SET: return VehicleValueType.VEHICLE_VALUE_TYPE_ZONED_FLOAT;
case VEHICLE_PROPERTY_HVAC_DEFROSTER: return VehicleValueType.VEHICLE_VALUE_TYPE_ZONED_BOOLEAN;
case VEHICLE_PROPERTY_HVAC_AC_ON: return VehicleValueType.VEHICLE_VALUE_TYPE_ZONED_BOOLEAN;
case VEHICLE_PROPERTY_HVAC_MAX_AC_ON: return VehicleValueType.VEHICLE_VALUE_TYPE_BOOLEAN;
case VEHICLE_PROPERTY_HVAC_MAX_DEFROST_ON: return VehicleValueType.VEHICLE_VALUE_TYPE_BOOLEAN;
case VEHICLE_PROPERTY_HVAC_RECIRC_ON: return VehicleValueType.VEHICLE_VALUE_TYPE_BOOLEAN;
case VEHICLE_PROPERTY_HVAC_DUAL_ON: return VehicleValueType.VEHICLE_VALUE_TYPE_BOOLEAN;
case VEHICLE_PROPERTY_ENV_OUTSIDE_TEMPERATURE: return VehicleValueType.VEHICLE_VALUE_TYPE_FLOAT;
case VEHICLE_PROPERTY_ENV_CABIN_TEMPERATURE: return VehicleValueType.VEHICLE_VALUE_TYPE_FLOAT;
case VEHICLE_PROPERTY_RADIO_PRESET: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32_VEC4;
case VEHICLE_PROPERTY_AUDIO_FOCUS: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32_VEC4;
case VEHICLE_PROPERTY_AUDIO_VOLUME: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32_VEC3;
case VEHICLE_PROPERTY_AUDIO_VOLUME_LIMIT: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32_VEC2;
case VEHICLE_PROPERTY_AUDIO_ROUTING_POLICY: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32_VEC2;
case VEHICLE_PROPERTY_AUDIO_HW_VARIANT: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32;
case VEHICLE_PROPERTY_AP_POWER_STATE: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32_VEC2;
case VEHICLE_PROPERTY_DISPLAY_BRIGHTNESS: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32;
case VEHICLE_PROPERTY_AP_POWER_BOOTUP_REASON: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32;
case VEHICLE_PROPERTY_HW_KEY_INPUT: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32_VEC4;
case VEHICLE_PROPERTY_INSTRUMENT_CLUSTER_INFO: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32_VEC4;
case VEHICLE_PROPERTY_INTERNAL_AUDIO_STREAM_STATE: return VehicleValueType.VEHICLE_VALUE_TYPE_INT32_VEC2;
default: return VehicleValueType.VEHICLE_VALUE_TYPE_SHOUD_NOT_USE;
}
}

public static String getVehiclePropertyName(int property) {
switch (property) {
case VEHICLE_PROPERTY_INFO_VIN: return "VEHICLE_PROPERTY_INFO_VIN";
case VEHICLE_PROPERTY_INFO_MAKE: return "VEHICLE_PROPERTY_INFO_MAKE";
case VEHICLE_PROPERTY_INFO_MODEL: return "VEHICLE_PROPERTY_INFO_MODEL";
case VEHICLE_PROPERTY_INFO_MODEL_YEAR: return "VEHICLE_PROPERTY_INFO_MODEL_YEAR";
case VEHICLE_PROPERTY_INFO_FUEL_CAPACITY: return "VEHICLE_PROPERTY_INFO_FUEL_CAPACITY";
case VEHICLE_PROPERTY_PERF_ODOMETER: return "VEHICLE_PROPERTY_PERF_ODOMETER";
case VEHICLE_PROPERTY_PERF_VEHICLE_SPEED: return "VEHICLE_PROPERTY_PERF_VEHICLE_SPEED";
case VEHICLE_PROPERTY_ENGINE_COOLANT_TEMP: return "VEHICLE_PROPERTY_ENGINE_COOLANT_TEMP";
case VEHICLE_PROPERTY_ENGINE_OIL_TEMP: return "VEHICLE_PROPERTY_ENGINE_OIL_TEMP";
case VEHICLE_PROPERTY_ENGINE_RPM: return "VEHICLE_PROPERTY_ENGINE_RPM";
case VEHICLE_PROPERTY_GEAR_SELECTION: return "VEHICLE_PROPERTY_GEAR_SELECTION";
case VEHICLE_PROPERTY_CURRENT_GEAR: return "VEHICLE_PROPERTY_CURRENT_GEAR";
case VEHICLE_PROPERTY_PARKING_BRAKE_ON: return "VEHICLE_PROPERTY_PARKING_BRAKE_ON";
case VEHICLE_PROPERTY_DRIVING_STATUS: return "VEHICLE_PROPERTY_DRIVING_STATUS";
case VEHICLE_PROPERTY_FUEL_LEVEL_LOW: return "VEHICLE_PROPERTY_FUEL_LEVEL_LOW";
case VEHICLE_PROPERTY_NIGHT_MODE: return "VEHICLE_PROPERTY_NIGHT_MODE";
case VEHICLE_PROPERTY_HVAC_FAN_SPEED: return "VEHICLE_PROPERTY_HVAC_FAN_SPEED";
case VEHICLE_PROPERTY_HVAC_FAN_DIRECTION: return "VEHICLE_PROPERTY_HVAC_FAN_DIRECTION";
case VEHICLE_PROPERTY_HVAC_TEMPERATURE_CURRENT: return "VEHICLE_PROPERTY_HVAC_TEMPERATURE_CURRENT";
case VEHICLE_PROPERTY_HVAC_TEMPERATURE_SET: return "VEHICLE_PROPERTY_HVAC_TEMPERATURE_SET";
case VEHICLE_PROPERTY_HVAC_DEFROSTER: return "VEHICLE_PROPERTY_HVAC_DEFROSTER";
case VEHICLE_PROPERTY_HVAC_AC_ON: return "VEHICLE_PROPERTY_HVAC_AC_ON";
case VEHICLE_PROPERTY_HVAC_MAX_AC_ON: return "VEHICLE_PROPERTY_HVAC_MAX_AC_ON";
case VEHICLE_PROPERTY_HVAC_MAX_DEFROST_ON: return "VEHICLE_PROPERTY_HVAC_MAX_DEFROST_ON";
case VEHICLE_PROPERTY_HVAC_RECIRC_ON: return "VEHICLE_PROPERTY_HVAC_RECIRC_ON";
case VEHICLE_PROPERTY_HVAC_DUAL_ON: return "VEHICLE_PROPERTY_HVAC_DUAL_ON";
case VEHICLE_PROPERTY_ENV_OUTSIDE_TEMPERATURE: return "VEHICLE_PROPERTY_ENV_OUTSIDE_TEMPERATURE";
case VEHICLE_PROPERTY_ENV_CABIN_TEMPERATURE: return "VEHICLE_PROPERTY_ENV_CABIN_TEMPERATURE";
case VEHICLE_PROPERTY_RADIO_PRESET: return "VEHICLE_PROPERTY_RADIO_PRESET";
case VEHICLE_PROPERTY_AUDIO_FOCUS: return "VEHICLE_PROPERTY_AUDIO_FOCUS";
case VEHICLE_PROPERTY_AUDIO_VOLUME: return "VEHICLE_PROPERTY_AUDIO_VOLUME";
case VEHICLE_PROPERTY_AUDIO_VOLUME_LIMIT: return "VEHICLE_PROPERTY_AUDIO_VOLUME_LIMIT";
case VEHICLE_PROPERTY_AUDIO_ROUTING_POLICY: return "VEHICLE_PROPERTY_AUDIO_ROUTING_POLICY";
case VEHICLE_PROPERTY_AUDIO_HW_VARIANT: return "VEHICLE_PROPERTY_AUDIO_HW_VARIANT";
case VEHICLE_PROPERTY_AP_POWER_STATE: return "VEHICLE_PROPERTY_AP_POWER_STATE";
case VEHICLE_PROPERTY_DISPLAY_BRIGHTNESS: return "VEHICLE_PROPERTY_DISPLAY_BRIGHTNESS";
case VEHICLE_PROPERTY_AP_POWER_BOOTUP_REASON: return "VEHICLE_PROPERTY_AP_POWER_BOOTUP_REASON";
case VEHICLE_PROPERTY_HW_KEY_INPUT: return "VEHICLE_PROPERTY_HW_KEY_INPUT";
case VEHICLE_PROPERTY_INSTRUMENT_CLUSTER_INFO: return "VEHICLE_PROPERTY_INSTRUMENT_CLUSTER_INFO";
case VEHICLE_PROPERTY_INTERNAL_AUDIO_STREAM_STATE: return "VEHICLE_PROPERTY_INTERNAL_AUDIO_STREAM_STATE";
default: return "UNKNOWN_PROPERTY";
}
}

public static int[] getVehicleChangeMode(int property) {
switch (property) {
case VEHICLE_PROPERTY_INFO_VIN: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_STATIC };
case VEHICLE_PROPERTY_INFO_MAKE: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_STATIC };
case VEHICLE_PROPERTY_INFO_MODEL: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_STATIC };
case VEHICLE_PROPERTY_INFO_MODEL_YEAR: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_STATIC };
case VEHICLE_PROPERTY_INFO_FUEL_CAPACITY: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_STATIC };
case VEHICLE_PROPERTY_PERF_ODOMETER: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE , VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_CONTINUOUS };
case VEHICLE_PROPERTY_PERF_VEHICLE_SPEED: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE , VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_CONTINUOUS };
case VEHICLE_PROPERTY_ENGINE_COOLANT_TEMP: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE , VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_CONTINUOUS };
case VEHICLE_PROPERTY_ENGINE_OIL_TEMP: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE , VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_CONTINUOUS };
case VEHICLE_PROPERTY_ENGINE_RPM: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE , VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_CONTINUOUS };
case VEHICLE_PROPERTY_GEAR_SELECTION: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_CURRENT_GEAR: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_PARKING_BRAKE_ON: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_DRIVING_STATUS: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_FUEL_LEVEL_LOW: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_NIGHT_MODE: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_HVAC_FAN_SPEED: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_HVAC_FAN_DIRECTION: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_HVAC_TEMPERATURE_CURRENT: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE , VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_CONTINUOUS };
case VEHICLE_PROPERTY_HVAC_TEMPERATURE_SET: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE , VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_CONTINUOUS };
case VEHICLE_PROPERTY_HVAC_DEFROSTER: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_HVAC_AC_ON: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_HVAC_MAX_AC_ON: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_HVAC_MAX_DEFROST_ON: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_HVAC_RECIRC_ON: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_HVAC_DUAL_ON: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_ENV_OUTSIDE_TEMPERATURE: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE , VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_CONTINUOUS };
case VEHICLE_PROPERTY_ENV_CABIN_TEMPERATURE: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE , VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_CONTINUOUS };
case VEHICLE_PROPERTY_RADIO_PRESET: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_AUDIO_FOCUS: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_AUDIO_VOLUME: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_AUDIO_VOLUME_LIMIT: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_AUDIO_ROUTING_POLICY: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_AUDIO_HW_VARIANT: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_STATIC };
case VEHICLE_PROPERTY_AP_POWER_STATE: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_DISPLAY_BRIGHTNESS: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_AP_POWER_BOOTUP_REASON: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_STATIC };
case VEHICLE_PROPERTY_HW_KEY_INPUT: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_INSTRUMENT_CLUSTER_INFO: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
case VEHICLE_PROPERTY_INTERNAL_AUDIO_STREAM_STATE: return new int[] { VehiclePropChangeMode.VEHICLE_PROP_CHANGE_MODE_ON_CHANGE };
default: return null;
}
}

public static int[] getVehicleAccess(int property) {
switch (property) {
case VEHICLE_PROPERTY_INFO_VIN: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_INFO_MAKE: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_INFO_MODEL: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_INFO_MODEL_YEAR: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_INFO_FUEL_CAPACITY: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_PERF_ODOMETER: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_PERF_VEHICLE_SPEED: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_ENGINE_COOLANT_TEMP: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_ENGINE_OIL_TEMP: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_ENGINE_RPM: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_GEAR_SELECTION: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_CURRENT_GEAR: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_PARKING_BRAKE_ON: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_DRIVING_STATUS: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_FUEL_LEVEL_LOW: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_NIGHT_MODE: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_HVAC_FAN_SPEED: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_HVAC_FAN_DIRECTION: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_HVAC_TEMPERATURE_CURRENT: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_HVAC_TEMPERATURE_SET: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_HVAC_DEFROSTER: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_HVAC_AC_ON: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_HVAC_MAX_AC_ON: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_HVAC_MAX_DEFROST_ON: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_HVAC_RECIRC_ON: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_HVAC_DUAL_ON: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_ENV_OUTSIDE_TEMPERATURE: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_ENV_CABIN_TEMPERATURE: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_RADIO_PRESET: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_AUDIO_FOCUS: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_AUDIO_VOLUME: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_AUDIO_VOLUME_LIMIT: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_AUDIO_ROUTING_POLICY: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_WRITE };
case VEHICLE_PROPERTY_AUDIO_HW_VARIANT: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_AP_POWER_STATE: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_DISPLAY_BRIGHTNESS: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ , VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_AP_POWER_BOOTUP_REASON: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_HW_KEY_INPUT: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ };
case VEHICLE_PROPERTY_INSTRUMENT_CLUSTER_INFO: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
case VEHICLE_PROPERTY_INTERNAL_AUDIO_STREAM_STATE: return new int[] { VehiclePropAccess.VEHICLE_PROP_ACCESS_READ_WRITE };
default: return null;
}
}

public static class VehicleHvacFanDirection {
public static final int VEHICLE_HVAC_FAN_DIRECTION_FACE = 0x1;
public static final int VEHICLE_HVAC_FAN_DIRECTION_FLOOR = 0x2;
public static final int VEHICLE_HVAC_FAN_DIRECTION_FACE_AND_FLOOR = 0x3;
public static final int VEHICLE_HVAC_FAN_DIRECTION_DEFROST = 0x4;
public static final int VEHICLE_HVAC_FAN_DIRECTION_DEFROST_AND_FLOOR = 0x5;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_HVAC_FAN_DIRECTION_FACE: return "VEHICLE_HVAC_FAN_DIRECTION_FACE";
case VEHICLE_HVAC_FAN_DIRECTION_FLOOR: return "VEHICLE_HVAC_FAN_DIRECTION_FLOOR";
case VEHICLE_HVAC_FAN_DIRECTION_FACE_AND_FLOOR: return "VEHICLE_HVAC_FAN_DIRECTION_FACE_AND_FLOOR";
case VEHICLE_HVAC_FAN_DIRECTION_DEFROST: return "VEHICLE_HVAC_FAN_DIRECTION_DEFROST";
case VEHICLE_HVAC_FAN_DIRECTION_DEFROST_AND_FLOOR: return "VEHICLE_HVAC_FAN_DIRECTION_DEFROST_AND_FLOOR";
default: return "UNKNOWN";
}
}
}

public static class VehicleRadioConsts {
public static final int VEHICLE_RADIO_PRESET_MIN_VALUE = 1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_RADIO_PRESET_MIN_VALUE: return "VEHICLE_RADIO_PRESET_MIN_VALUE";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioFocusRequest {
public static final int VEHICLE_AUDIO_FOCUS_REQUEST_GAIN = 0x1;
public static final int VEHICLE_AUDIO_FOCUS_REQUEST_GAIN_TRANSIENT = 0x2;
public static final int VEHICLE_AUDIO_FOCUS_REQUEST_GAIN_TRANSIENT_MAY_DUCK = 0x3;
public static final int VEHICLE_AUDIO_FOCUS_REQUEST_GAIN_TRANSIENT_NO_DUCK = 0x4;
public static final int VEHICLE_AUDIO_FOCUS_REQUEST_RELEASE = 0x5;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_FOCUS_REQUEST_GAIN: return "VEHICLE_AUDIO_FOCUS_REQUEST_GAIN";
case VEHICLE_AUDIO_FOCUS_REQUEST_GAIN_TRANSIENT: return "VEHICLE_AUDIO_FOCUS_REQUEST_GAIN_TRANSIENT";
case VEHICLE_AUDIO_FOCUS_REQUEST_GAIN_TRANSIENT_MAY_DUCK: return "VEHICLE_AUDIO_FOCUS_REQUEST_GAIN_TRANSIENT_MAY_DUCK";
case VEHICLE_AUDIO_FOCUS_REQUEST_GAIN_TRANSIENT_NO_DUCK: return "VEHICLE_AUDIO_FOCUS_REQUEST_GAIN_TRANSIENT_NO_DUCK";
case VEHICLE_AUDIO_FOCUS_REQUEST_RELEASE: return "VEHICLE_AUDIO_FOCUS_REQUEST_RELEASE";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioFocusState {
public static final int VEHICLE_AUDIO_FOCUS_STATE_GAIN = 0x1;
public static final int VEHICLE_AUDIO_FOCUS_STATE_GAIN_TRANSIENT = 0x2;
public static final int VEHICLE_AUDIO_FOCUS_STATE_LOSS_TRANSIENT_CAN_DUCK = 0x3;
public static final int VEHICLE_AUDIO_FOCUS_STATE_LOSS_TRANSIENT = 0x4;
public static final int VEHICLE_AUDIO_FOCUS_STATE_LOSS = 0x5;
public static final int VEHICLE_AUDIO_FOCUS_STATE_LOSS_TRANSIENT_EXLCUSIVE = 0x6;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_FOCUS_STATE_GAIN: return "VEHICLE_AUDIO_FOCUS_STATE_GAIN";
case VEHICLE_AUDIO_FOCUS_STATE_GAIN_TRANSIENT: return "VEHICLE_AUDIO_FOCUS_STATE_GAIN_TRANSIENT";
case VEHICLE_AUDIO_FOCUS_STATE_LOSS_TRANSIENT_CAN_DUCK: return "VEHICLE_AUDIO_FOCUS_STATE_LOSS_TRANSIENT_CAN_DUCK";
case VEHICLE_AUDIO_FOCUS_STATE_LOSS_TRANSIENT: return "VEHICLE_AUDIO_FOCUS_STATE_LOSS_TRANSIENT";
case VEHICLE_AUDIO_FOCUS_STATE_LOSS: return "VEHICLE_AUDIO_FOCUS_STATE_LOSS";
case VEHICLE_AUDIO_FOCUS_STATE_LOSS_TRANSIENT_EXLCUSIVE: return "VEHICLE_AUDIO_FOCUS_STATE_LOSS_TRANSIENT_EXLCUSIVE";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioStreamFlag {
public static final int VEHICLE_AUDIO_STREAM_STREAM0_FLAG = (0x1<<0);
public static final int VEHICLE_AUDIO_STREAM_STREAM1_FLAG = (0x1<<1);
public static final int VEHICLE_AUDIO_STREAM_STREAM2_FLAG = (0x1<<2);
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_STREAM_STREAM0_FLAG: return "VEHICLE_AUDIO_STREAM_STREAM0_FLAG";
case VEHICLE_AUDIO_STREAM_STREAM1_FLAG: return "VEHICLE_AUDIO_STREAM_STREAM1_FLAG";
case VEHICLE_AUDIO_STREAM_STREAM2_FLAG: return "VEHICLE_AUDIO_STREAM_STREAM2_FLAG";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioStream {
public static final int VEHICLE_AUDIO_STREAM0 = 0;
public static final int VEHICLE_AUDIO_STREAM1 = 1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_STREAM0: return "VEHICLE_AUDIO_STREAM0";
case VEHICLE_AUDIO_STREAM1: return "VEHICLE_AUDIO_STREAM1";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioExtFocusFlag {
public static final int VEHICLE_AUDIO_EXT_FOCUS_NONE_FLAG = 0x0;
public static final int VEHICLE_AUDIO_EXT_FOCUS_CAR_PERMANENT_FLAG = 0x1;
public static final int VEHICLE_AUDIO_EXT_FOCUS_CAR_TRANSIENT_FLAG = 0x2;
public static final int VEHICLE_AUDIO_EXT_FOCUS_CAR_PLAY_ONLY_FLAG = 0x4;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_EXT_FOCUS_NONE_FLAG: return "VEHICLE_AUDIO_EXT_FOCUS_NONE_FLAG";
case VEHICLE_AUDIO_EXT_FOCUS_CAR_PERMANENT_FLAG: return "VEHICLE_AUDIO_EXT_FOCUS_CAR_PERMANENT_FLAG";
case VEHICLE_AUDIO_EXT_FOCUS_CAR_TRANSIENT_FLAG: return "VEHICLE_AUDIO_EXT_FOCUS_CAR_TRANSIENT_FLAG";
case VEHICLE_AUDIO_EXT_FOCUS_CAR_PLAY_ONLY_FLAG: return "VEHICLE_AUDIO_EXT_FOCUS_CAR_PLAY_ONLY_FLAG";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioFocusIndex {
public static final int VEHICLE_AUDIO_FOCUS_INDEX_FOCUS = 0;
public static final int VEHICLE_AUDIO_FOCUS_INDEX_STREAMS = 1;
public static final int VEHICLE_AUDIO_FOCUS_INDEX_EXTERNAL_FOCUS_STATE = 2;
public static final int VEHICLE_AUDIO_FOCUS_INDEX_AUDIO_CONTEXTS = 3;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_FOCUS_INDEX_FOCUS: return "VEHICLE_AUDIO_FOCUS_INDEX_FOCUS";
case VEHICLE_AUDIO_FOCUS_INDEX_STREAMS: return "VEHICLE_AUDIO_FOCUS_INDEX_STREAMS";
case VEHICLE_AUDIO_FOCUS_INDEX_EXTERNAL_FOCUS_STATE: return "VEHICLE_AUDIO_FOCUS_INDEX_EXTERNAL_FOCUS_STATE";
case VEHICLE_AUDIO_FOCUS_INDEX_AUDIO_CONTEXTS: return "VEHICLE_AUDIO_FOCUS_INDEX_AUDIO_CONTEXTS";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioContextFlag {
public static final int VEHICLE_AUDIO_CONTEXT_MUSIC_FLAG = 0x1;
public static final int VEHICLE_AUDIO_CONTEXT_NAVIGATION_FLAG = 0x2;
public static final int VEHICLE_AUDIO_CONTEXT_VOICE_COMMAND_FLAG = 0x4;
public static final int VEHICLE_AUDIO_CONTEXT_CALL_FLAG = 0x8;
public static final int VEHICLE_AUDIO_CONTEXT_ALARM_FLAG = 0x10;
public static final int VEHICLE_AUDIO_CONTEXT_NOTIFICATION_FLAG = 0x20;
public static final int VEHICLE_AUDIO_CONTEXT_UNKNOWN_FLAG = 0x40;
public static final int VEHICLE_AUDIO_CONTEXT_SAFETY_ALERT_FLAG = 0x80;
public static final int VEHICLE_AUDIO_CONTEXT_CD_ROM_FLAG = 0x100;
public static final int VEHICLE_AUDIO_CONTEXT_AUX_AUDIO_FLAG = 0x200;
public static final int VEHICLE_AUDIO_CONTEXT_SYSTEM_SOUND_FLAG = 0x400;
public static final int VEHICLE_AUDIO_CONTEXT_RADIO_FLAG = 0x800;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_CONTEXT_MUSIC_FLAG: return "VEHICLE_AUDIO_CONTEXT_MUSIC_FLAG";
case VEHICLE_AUDIO_CONTEXT_NAVIGATION_FLAG: return "VEHICLE_AUDIO_CONTEXT_NAVIGATION_FLAG";
case VEHICLE_AUDIO_CONTEXT_VOICE_COMMAND_FLAG: return "VEHICLE_AUDIO_CONTEXT_VOICE_COMMAND_FLAG";
case VEHICLE_AUDIO_CONTEXT_CALL_FLAG: return "VEHICLE_AUDIO_CONTEXT_CALL_FLAG";
case VEHICLE_AUDIO_CONTEXT_ALARM_FLAG: return "VEHICLE_AUDIO_CONTEXT_ALARM_FLAG";
case VEHICLE_AUDIO_CONTEXT_NOTIFICATION_FLAG: return "VEHICLE_AUDIO_CONTEXT_NOTIFICATION_FLAG";
case VEHICLE_AUDIO_CONTEXT_UNKNOWN_FLAG: return "VEHICLE_AUDIO_CONTEXT_UNKNOWN_FLAG";
case VEHICLE_AUDIO_CONTEXT_SAFETY_ALERT_FLAG: return "VEHICLE_AUDIO_CONTEXT_SAFETY_ALERT_FLAG";
case VEHICLE_AUDIO_CONTEXT_CD_ROM_FLAG: return "VEHICLE_AUDIO_CONTEXT_CD_ROM_FLAG";
case VEHICLE_AUDIO_CONTEXT_AUX_AUDIO_FLAG: return "VEHICLE_AUDIO_CONTEXT_AUX_AUDIO_FLAG";
case VEHICLE_AUDIO_CONTEXT_SYSTEM_SOUND_FLAG: return "VEHICLE_AUDIO_CONTEXT_SYSTEM_SOUND_FLAG";
case VEHICLE_AUDIO_CONTEXT_RADIO_FLAG: return "VEHICLE_AUDIO_CONTEXT_RADIO_FLAG";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioVolumeState {
public static final int VEHICLE_AUDIO_VOLUME_STATE_OK = 0;
public static final int VEHICLE_AUDIO_VOLUME_STATE_LIMIT_REACHED = 1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_VOLUME_STATE_OK: return "VEHICLE_AUDIO_VOLUME_STATE_OK";
case VEHICLE_AUDIO_VOLUME_STATE_LIMIT_REACHED: return "VEHICLE_AUDIO_VOLUME_STATE_LIMIT_REACHED";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioVolumeIndex {
public static final int VEHICLE_AUDIO_VOLUME_INDEX_STREAM = 0;
public static final int VEHICLE_AUDIO_VOLUME_INDEX_VOLUME = 1;
public static final int VEHICLE_AUDIO_VOLUME_INDEX_STATE = 2;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_VOLUME_INDEX_STREAM: return "VEHICLE_AUDIO_VOLUME_INDEX_STREAM";
case VEHICLE_AUDIO_VOLUME_INDEX_VOLUME: return "VEHICLE_AUDIO_VOLUME_INDEX_VOLUME";
case VEHICLE_AUDIO_VOLUME_INDEX_STATE: return "VEHICLE_AUDIO_VOLUME_INDEX_STATE";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioVolumeLimitIndex {
public static final int VEHICLE_AUDIO_VOLUME_LIMIT_INDEX_STREAM = 0;
public static final int VEHICLE_AUDIO_VOLUME_LIMIT_INDEX_MAX_VOLUME = 1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_VOLUME_LIMIT_INDEX_STREAM: return "VEHICLE_AUDIO_VOLUME_LIMIT_INDEX_STREAM";
case VEHICLE_AUDIO_VOLUME_LIMIT_INDEX_MAX_VOLUME: return "VEHICLE_AUDIO_VOLUME_LIMIT_INDEX_MAX_VOLUME";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioRoutingPolicyIndex {
public static final int VEHICLE_AUDIO_ROUTING_POLICY_INDEX_STREAM = 0;
public static final int VEHICLE_AUDIO_ROUTING_POLICY_INDEX_CONTEXTS = 1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_ROUTING_POLICY_INDEX_STREAM: return "VEHICLE_AUDIO_ROUTING_POLICY_INDEX_STREAM";
case VEHICLE_AUDIO_ROUTING_POLICY_INDEX_CONTEXTS: return "VEHICLE_AUDIO_ROUTING_POLICY_INDEX_CONTEXTS";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioHwVariantConfigFlag {
public static final int VEHICLE_AUDIO_HW_VARIANT_FLAG_PASS_RADIO_AUDIO_FOCUS_FLAG = 0x1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_HW_VARIANT_FLAG_PASS_RADIO_AUDIO_FOCUS_FLAG: return "VEHICLE_AUDIO_HW_VARIANT_FLAG_PASS_RADIO_AUDIO_FOCUS_FLAG";
default: return "UNKNOWN";
}
}
}

public static class VehicleApPowerStateConfigFlag {
public static final int VEHICLE_AP_POWER_STATE_CONFIG_ENABLE_DEEP_SLEEP_FLAG = 0x1;
public static final int VEHICLE_AP_POWER_STATE_CONFIG_SUPPORT_TIMER_POWER_ON_FLAG = 0x2;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AP_POWER_STATE_CONFIG_ENABLE_DEEP_SLEEP_FLAG: return "VEHICLE_AP_POWER_STATE_CONFIG_ENABLE_DEEP_SLEEP_FLAG";
case VEHICLE_AP_POWER_STATE_CONFIG_SUPPORT_TIMER_POWER_ON_FLAG: return "VEHICLE_AP_POWER_STATE_CONFIG_SUPPORT_TIMER_POWER_ON_FLAG";
default: return "UNKNOWN";
}
}
}

public static class VehicleApPowerState {
public static final int VEHICLE_AP_POWER_STATE_OFF = 0;
public static final int VEHICLE_AP_POWER_STATE_DEEP_SLEEP = 1;
public static final int VEHICLE_AP_POWER_STATE_ON_DISP_OFF = 2;
public static final int VEHICLE_AP_POWER_STATE_ON_FULL = 3;
public static final int VEHICLE_AP_POWER_STATE_SHUTDOWN_PREPARE = 4;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AP_POWER_STATE_OFF: return "VEHICLE_AP_POWER_STATE_OFF";
case VEHICLE_AP_POWER_STATE_DEEP_SLEEP: return "VEHICLE_AP_POWER_STATE_DEEP_SLEEP";
case VEHICLE_AP_POWER_STATE_ON_DISP_OFF: return "VEHICLE_AP_POWER_STATE_ON_DISP_OFF";
case VEHICLE_AP_POWER_STATE_ON_FULL: return "VEHICLE_AP_POWER_STATE_ON_FULL";
case VEHICLE_AP_POWER_STATE_SHUTDOWN_PREPARE: return "VEHICLE_AP_POWER_STATE_SHUTDOWN_PREPARE";
default: return "UNKNOWN";
}
}
}

public static class VehicleApPowerStateShutdownParam {
public static final int VEHICLE_AP_POWER_SHUTDOWN_PARAM_SHUTDOWN_IMMEDIATELY = 1;
public static final int VEHICLE_AP_POWER_SHUTDOWN_PARAM_CAN_SLEEP = 2;
public static final int VEHICLE_AP_POWER_SHUTDOWN_PARAM_SHUTDOWN_ONLY = 3;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AP_POWER_SHUTDOWN_PARAM_SHUTDOWN_IMMEDIATELY: return "VEHICLE_AP_POWER_SHUTDOWN_PARAM_SHUTDOWN_IMMEDIATELY";
case VEHICLE_AP_POWER_SHUTDOWN_PARAM_CAN_SLEEP: return "VEHICLE_AP_POWER_SHUTDOWN_PARAM_CAN_SLEEP";
case VEHICLE_AP_POWER_SHUTDOWN_PARAM_SHUTDOWN_ONLY: return "VEHICLE_AP_POWER_SHUTDOWN_PARAM_SHUTDOWN_ONLY";
default: return "UNKNOWN";
}
}
}

public static class VehicleApPowerSetState {
public static final int VEHICLE_AP_POWER_SET_BOOT_COMPLETE = 0x1;
public static final int VEHICLE_AP_POWER_SET_DEEP_SLEEP_ENTRY = 0x2;
public static final int VEHICLE_AP_POWER_SET_DEEP_SLEEP_EXIT = 0x3;
public static final int VEHICLE_AP_POWER_SET_SHUTDOWN_POSTPONE = 0x4;
public static final int VEHICLE_AP_POWER_SET_SHUTDOWN_START = 0x5;
public static final int VEHICLE_AP_POWER_SET_DISPLAY_OFF = 0x6;
public static final int VEHICLE_AP_POWER_SET_DISPLAY_ON = 0x7;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AP_POWER_SET_BOOT_COMPLETE: return "VEHICLE_AP_POWER_SET_BOOT_COMPLETE";
case VEHICLE_AP_POWER_SET_DEEP_SLEEP_ENTRY: return "VEHICLE_AP_POWER_SET_DEEP_SLEEP_ENTRY";
case VEHICLE_AP_POWER_SET_DEEP_SLEEP_EXIT: return "VEHICLE_AP_POWER_SET_DEEP_SLEEP_EXIT";
case VEHICLE_AP_POWER_SET_SHUTDOWN_POSTPONE: return "VEHICLE_AP_POWER_SET_SHUTDOWN_POSTPONE";
case VEHICLE_AP_POWER_SET_SHUTDOWN_START: return "VEHICLE_AP_POWER_SET_SHUTDOWN_START";
case VEHICLE_AP_POWER_SET_DISPLAY_OFF: return "VEHICLE_AP_POWER_SET_DISPLAY_OFF";
case VEHICLE_AP_POWER_SET_DISPLAY_ON: return "VEHICLE_AP_POWER_SET_DISPLAY_ON";
default: return "UNKNOWN";
}
}
}

public static class VehicleApPowerStateIndex {
public static final int VEHICLE_AP_POWER_STATE_INDEX_STATE = 0;
public static final int VEHICLE_AP_POWER_STATE_INDEX_ADDITIONAL = 1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AP_POWER_STATE_INDEX_STATE: return "VEHICLE_AP_POWER_STATE_INDEX_STATE";
case VEHICLE_AP_POWER_STATE_INDEX_ADDITIONAL: return "VEHICLE_AP_POWER_STATE_INDEX_ADDITIONAL";
default: return "UNKNOWN";
}
}
}

public static class VehicleApPowerBootupReason {
public static final int VEHICLE_AP_POWER_BOOTUP_REASON_USER_POWER_ON = 0;
public static final int VEHICLE_AP_POWER_BOOTUP_REASON_USER_UNLOCK = 1;
public static final int VEHICLE_AP_POWER_BOOTUP_REASON_TIMER = 2;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AP_POWER_BOOTUP_REASON_USER_POWER_ON: return "VEHICLE_AP_POWER_BOOTUP_REASON_USER_POWER_ON";
case VEHICLE_AP_POWER_BOOTUP_REASON_USER_UNLOCK: return "VEHICLE_AP_POWER_BOOTUP_REASON_USER_UNLOCK";
case VEHICLE_AP_POWER_BOOTUP_REASON_TIMER: return "VEHICLE_AP_POWER_BOOTUP_REASON_TIMER";
default: return "UNKNOWN";
}
}
}

public static class VehicleHwKeyInputAction {
public static final int VEHICLE_HW_KEY_INPUT_ACTION_DOWN = 0;
public static final int VEHICLE_HW_KEY_INPUT_ACTION_UP = 1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_HW_KEY_INPUT_ACTION_DOWN: return "VEHICLE_HW_KEY_INPUT_ACTION_DOWN";
case VEHICLE_HW_KEY_INPUT_ACTION_UP: return "VEHICLE_HW_KEY_INPUT_ACTION_UP";
default: return "UNKNOWN";
}
}
}

public static class VehicleDisplay {
public static final int VEHICLE_DISPLAY_MAIN = 0;
public static final int VEHICLE_DISPLAY_INSTRUMENT_CLUSTER = 1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_DISPLAY_MAIN: return "VEHICLE_DISPLAY_MAIN";
case VEHICLE_DISPLAY_INSTRUMENT_CLUSTER: return "VEHICLE_DISPLAY_INSTRUMENT_CLUSTER";
default: return "UNKNOWN";
}
}
}

public static class VehicleInstumentClusterType {
public static final int VEHICLE_INSTRUMENT_CLUSTER_TYPE_NONE = 0;
public static final int VEHICLE_INSTRUMENT_CLUSTER_TYPE_HAL_INTERFACE = 1;
public static final int VEHICLE_INSTRUMENT_CLUSTER_TYPE_EXTERNAL_DISPLAY = 2;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_INSTRUMENT_CLUSTER_TYPE_NONE: return "VEHICLE_INSTRUMENT_CLUSTER_TYPE_NONE";
case VEHICLE_INSTRUMENT_CLUSTER_TYPE_HAL_INTERFACE: return "VEHICLE_INSTRUMENT_CLUSTER_TYPE_HAL_INTERFACE";
case VEHICLE_INSTRUMENT_CLUSTER_TYPE_EXTERNAL_DISPLAY: return "VEHICLE_INSTRUMENT_CLUSTER_TYPE_EXTERNAL_DISPLAY";
default: return "UNKNOWN";
}
}
}

public static class VehicleValueType {
public static final int VEHICLE_VALUE_TYPE_SHOUD_NOT_USE = 0x00;
public static final int VEHICLE_VALUE_TYPE_STRING = 0x01;
public static final int VEHICLE_VALUE_TYPE_BYTES = 0x02;
public static final int VEHICLE_VALUE_TYPE_BOOLEAN = 0x03;
public static final int VEHICLE_VALUE_TYPE_ZONED_BOOLEAN = 0x04;
public static final int VEHICLE_VALUE_TYPE_INT64 = 0x05;
public static final int VEHICLE_VALUE_TYPE_FLOAT = 0x10;
public static final int VEHICLE_VALUE_TYPE_FLOAT_VEC2 = 0x11;
public static final int VEHICLE_VALUE_TYPE_FLOAT_VEC3 = 0x12;
public static final int VEHICLE_VALUE_TYPE_FLOAT_VEC4 = 0x13;
public static final int VEHICLE_VALUE_TYPE_INT32 = 0x20;
public static final int VEHICLE_VALUE_TYPE_INT32_VEC2 = 0x21;
public static final int VEHICLE_VALUE_TYPE_INT32_VEC3 = 0x22;
public static final int VEHICLE_VALUE_TYPE_INT32_VEC4 = 0x23;
public static final int VEHICLE_VALUE_TYPE_ZONED_FLOAT = 0x30;
public static final int VEHICLE_VALUE_TYPE_ZONED_FLOAT_VEC2 = 0x31;
public static final int VEHICLE_VALUE_TYPE_ZONED_FLOAT_VEC3 = 0x32;
public static final int VEHICLE_VALUE_TYPE_ZONED_FLOAT_VEC4 = 0x33;
public static final int VEHICLE_VALUE_TYPE_ZONED_INT32 = 0x40;
public static final int VEHICLE_VALUE_TYPE_ZONED_INT32_VEC2 = 0x41;
public static final int VEHICLE_VALUE_TYPE_ZONED_INT32_VEC3 = 0x42;
public static final int VEHICLE_VALUE_TYPE_ZONED_INT32_VEC4 = 0x43;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_VALUE_TYPE_SHOUD_NOT_USE: return "VEHICLE_VALUE_TYPE_SHOUD_NOT_USE";
case VEHICLE_VALUE_TYPE_STRING: return "VEHICLE_VALUE_TYPE_STRING";
case VEHICLE_VALUE_TYPE_BYTES: return "VEHICLE_VALUE_TYPE_BYTES";
case VEHICLE_VALUE_TYPE_BOOLEAN: return "VEHICLE_VALUE_TYPE_BOOLEAN";
case VEHICLE_VALUE_TYPE_ZONED_BOOLEAN: return "VEHICLE_VALUE_TYPE_ZONED_BOOLEAN";
case VEHICLE_VALUE_TYPE_INT64: return "VEHICLE_VALUE_TYPE_INT64";
case VEHICLE_VALUE_TYPE_FLOAT: return "VEHICLE_VALUE_TYPE_FLOAT";
case VEHICLE_VALUE_TYPE_FLOAT_VEC2: return "VEHICLE_VALUE_TYPE_FLOAT_VEC2";
case VEHICLE_VALUE_TYPE_FLOAT_VEC3: return "VEHICLE_VALUE_TYPE_FLOAT_VEC3";
case VEHICLE_VALUE_TYPE_FLOAT_VEC4: return "VEHICLE_VALUE_TYPE_FLOAT_VEC4";
case VEHICLE_VALUE_TYPE_INT32: return "VEHICLE_VALUE_TYPE_INT32";
case VEHICLE_VALUE_TYPE_INT32_VEC2: return "VEHICLE_VALUE_TYPE_INT32_VEC2";
case VEHICLE_VALUE_TYPE_INT32_VEC3: return "VEHICLE_VALUE_TYPE_INT32_VEC3";
case VEHICLE_VALUE_TYPE_INT32_VEC4: return "VEHICLE_VALUE_TYPE_INT32_VEC4";
case VEHICLE_VALUE_TYPE_ZONED_FLOAT: return "VEHICLE_VALUE_TYPE_ZONED_FLOAT";
case VEHICLE_VALUE_TYPE_ZONED_FLOAT_VEC2: return "VEHICLE_VALUE_TYPE_ZONED_FLOAT_VEC2";
case VEHICLE_VALUE_TYPE_ZONED_FLOAT_VEC3: return "VEHICLE_VALUE_TYPE_ZONED_FLOAT_VEC3";
case VEHICLE_VALUE_TYPE_ZONED_FLOAT_VEC4: return "VEHICLE_VALUE_TYPE_ZONED_FLOAT_VEC4";
case VEHICLE_VALUE_TYPE_ZONED_INT32: return "VEHICLE_VALUE_TYPE_ZONED_INT32";
case VEHICLE_VALUE_TYPE_ZONED_INT32_VEC2: return "VEHICLE_VALUE_TYPE_ZONED_INT32_VEC2";
case VEHICLE_VALUE_TYPE_ZONED_INT32_VEC3: return "VEHICLE_VALUE_TYPE_ZONED_INT32_VEC3";
case VEHICLE_VALUE_TYPE_ZONED_INT32_VEC4: return "VEHICLE_VALUE_TYPE_ZONED_INT32_VEC4";
default: return "UNKNOWN";
}
}
}

public static class VehicleUnitType {
public static final int VEHICLE_UNIT_TYPE_SHOULD_NOT_USE = 0x00000000;
public static final int VEHICLE_UNIT_TYPE_METER_PER_SEC = 0x00000001;
public static final int VEHICLE_UNIT_TYPE_RPM = 0x00000002;
public static final int VEHICLE_UNIT_TYPE_HZ = 0x00000003;
public static final int VEHICLE_UNIT_TYPE_PERCENTILE = 0x00000010;
public static final int VEHICLE_UNIT_TYPE_MILLIMETER = 0x00000020;
public static final int VEHICLE_UNIT_TYPE_METER = 0x00000021;
public static final int VEHICLE_UNIT_TYPE_KILOMETER = 0x00000023;
public static final int VEHICLE_UNIT_TYPE_CELCIUS = 0x00000030;
public static final int VEHICLE_UNIT_TYPE_MILLILITER = 0x00000040;
public static final int VEHICLE_UNIT_TYPE_NANO_SECS = 0x00000050;
public static final int VEHICLE_UNOT_TYPE_SECS = 0x00000053;
public static final int VEHICLE_UNIT_TYPE_YEAR = 0x00000059;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_UNIT_TYPE_SHOULD_NOT_USE: return "VEHICLE_UNIT_TYPE_SHOULD_NOT_USE";
case VEHICLE_UNIT_TYPE_METER_PER_SEC: return "VEHICLE_UNIT_TYPE_METER_PER_SEC";
case VEHICLE_UNIT_TYPE_RPM: return "VEHICLE_UNIT_TYPE_RPM";
case VEHICLE_UNIT_TYPE_HZ: return "VEHICLE_UNIT_TYPE_HZ";
case VEHICLE_UNIT_TYPE_PERCENTILE: return "VEHICLE_UNIT_TYPE_PERCENTILE";
case VEHICLE_UNIT_TYPE_MILLIMETER: return "VEHICLE_UNIT_TYPE_MILLIMETER";
case VEHICLE_UNIT_TYPE_METER: return "VEHICLE_UNIT_TYPE_METER";
case VEHICLE_UNIT_TYPE_KILOMETER: return "VEHICLE_UNIT_TYPE_KILOMETER";
case VEHICLE_UNIT_TYPE_CELCIUS: return "VEHICLE_UNIT_TYPE_CELCIUS";
case VEHICLE_UNIT_TYPE_MILLILITER: return "VEHICLE_UNIT_TYPE_MILLILITER";
case VEHICLE_UNIT_TYPE_NANO_SECS: return "VEHICLE_UNIT_TYPE_NANO_SECS";
case VEHICLE_UNOT_TYPE_SECS: return "VEHICLE_UNOT_TYPE_SECS";
case VEHICLE_UNIT_TYPE_YEAR: return "VEHICLE_UNIT_TYPE_YEAR";
default: return "UNKNOWN";
}
}
}

public static class VehiclePropChangeMode {
public static final int VEHICLE_PROP_CHANGE_MODE_STATIC = 0x00;
public static final int VEHICLE_PROP_CHANGE_MODE_ON_CHANGE = 0x01;
public static final int VEHICLE_PROP_CHANGE_MODE_CONTINUOUS = 0x02;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_PROP_CHANGE_MODE_STATIC: return "VEHICLE_PROP_CHANGE_MODE_STATIC";
case VEHICLE_PROP_CHANGE_MODE_ON_CHANGE: return "VEHICLE_PROP_CHANGE_MODE_ON_CHANGE";
case VEHICLE_PROP_CHANGE_MODE_CONTINUOUS: return "VEHICLE_PROP_CHANGE_MODE_CONTINUOUS";
default: return "UNKNOWN";
}
}
}

public static class VehiclePropAccess {
public static final int VEHICLE_PROP_ACCESS_READ = 0x01;
public static final int VEHICLE_PROP_ACCESS_WRITE = 0x02;
public static final int VEHICLE_PROP_ACCESS_READ_WRITE = 0x03;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_PROP_ACCESS_READ: return "VEHICLE_PROP_ACCESS_READ";
case VEHICLE_PROP_ACCESS_WRITE: return "VEHICLE_PROP_ACCESS_WRITE";
case VEHICLE_PROP_ACCESS_READ_WRITE: return "VEHICLE_PROP_ACCESS_READ_WRITE";
default: return "UNKNOWN";
}
}
}

public static class VehiclePermissionModel {
public static final int VEHICLE_PERMISSION_NO_RESTRICTION = 0;
public static final int VEHICLE_PERMISSION_OEM_ONLY = 0x1;
public static final int VEHICLE_PERMISSION_SYSTEM_APP_ONLY = 0x2;
public static final int VEHICLE_PERMISSION_OEM_OR_SYSTEM_APP = 0x3;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_PERMISSION_NO_RESTRICTION: return "VEHICLE_PERMISSION_NO_RESTRICTION";
case VEHICLE_PERMISSION_OEM_ONLY: return "VEHICLE_PERMISSION_OEM_ONLY";
case VEHICLE_PERMISSION_SYSTEM_APP_ONLY: return "VEHICLE_PERMISSION_SYSTEM_APP_ONLY";
case VEHICLE_PERMISSION_OEM_OR_SYSTEM_APP: return "VEHICLE_PERMISSION_OEM_OR_SYSTEM_APP";
default: return "UNKNOWN";
}
}
}

public static class VehicleDrivingStatus {
public static final int VEHICLE_DRIVING_STATUS_UNRESTRICTED = 0x00;
public static final int VEHICLE_DRIVING_STATUS_NO_VIDEO = 0x01;
public static final int VEHICLE_DRIVING_STATUS_NO_KEYBOARD_INPUT = 0x02;
public static final int VEHICLE_DRIVING_STATUS_NO_VOICE_INPUT = 0x04;
public static final int VEHICLE_DRIVING_STATUS_NO_CONFIG = 0x08;
public static final int VEHICLE_DRIVING_STATUS_LIMIT_MESSAGE_LEN = 0x10;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_DRIVING_STATUS_UNRESTRICTED: return "VEHICLE_DRIVING_STATUS_UNRESTRICTED";
case VEHICLE_DRIVING_STATUS_NO_VIDEO: return "VEHICLE_DRIVING_STATUS_NO_VIDEO";
case VEHICLE_DRIVING_STATUS_NO_KEYBOARD_INPUT: return "VEHICLE_DRIVING_STATUS_NO_KEYBOARD_INPUT";
case VEHICLE_DRIVING_STATUS_NO_VOICE_INPUT: return "VEHICLE_DRIVING_STATUS_NO_VOICE_INPUT";
case VEHICLE_DRIVING_STATUS_NO_CONFIG: return "VEHICLE_DRIVING_STATUS_NO_CONFIG";
case VEHICLE_DRIVING_STATUS_LIMIT_MESSAGE_LEN: return "VEHICLE_DRIVING_STATUS_LIMIT_MESSAGE_LEN";
default: return "UNKNOWN";
}
}
}

public static class VehicleGear {
public static final int VEHICLE_GEAR_NEUTRAL = 0x0001;
public static final int VEHICLE_GEAR_REVERSE = 0x0002;
public static final int VEHICLE_GEAR_PARK = 0x0004;
public static final int VEHICLE_GEAR_DRIVE = 0x0008;
public static final int VEHICLE_GEAR_LOW = 0x0010;
public static final int VEHICLE_GEAR_1 = 0x0010;
public static final int VEHICLE_GEAR_2 = 0x0020;
public static final int VEHICLE_GEAR_3 = 0x0040;
public static final int VEHICLE_GEAR_4 = 0x0080;
public static final int VEHICLE_GEAR_5 = 0x0100;
public static final int VEHICLE_GEAR_6 = 0x0200;
public static final int VEHICLE_GEAR_7 = 0x0400;
public static final int VEHICLE_GEAR_8 = 0x0800;
public static final int VEHICLE_GEAR_9 = 0x1000;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_GEAR_NEUTRAL: return "VEHICLE_GEAR_NEUTRAL";
case VEHICLE_GEAR_REVERSE: return "VEHICLE_GEAR_REVERSE";
case VEHICLE_GEAR_PARK: return "VEHICLE_GEAR_PARK";
case VEHICLE_GEAR_DRIVE: return "VEHICLE_GEAR_DRIVE";
case VEHICLE_GEAR_LOW: return "VEHICLE_GEAR_LOW";
case VEHICLE_GEAR_2: return "VEHICLE_GEAR_2";
case VEHICLE_GEAR_3: return "VEHICLE_GEAR_3";
case VEHICLE_GEAR_4: return "VEHICLE_GEAR_4";
case VEHICLE_GEAR_5: return "VEHICLE_GEAR_5";
case VEHICLE_GEAR_6: return "VEHICLE_GEAR_6";
case VEHICLE_GEAR_7: return "VEHICLE_GEAR_7";
case VEHICLE_GEAR_8: return "VEHICLE_GEAR_8";
case VEHICLE_GEAR_9: return "VEHICLE_GEAR_9";
default: return "UNKNOWN";
}
}
}

public static class VehicleZone {
public static final int VEHICLE_ZONE_ROW_1_LEFT = 0x00000001;
public static final int VEHICLE_ZONE_ROW_1_CENTER = 0x00000002;
public static final int VEHICLE_ZONE_ROW_1_RIGHT = 0x00000004;
public static final int VEHICLE_ZONE_ROW_1_ALL = 0x00000008;
public static final int VEHICLE_ZONE_ROW_2_LEFT = 0x00000010;
public static final int VEHICLE_ZONE_ROW_2_CENTER = 0x00000020;
public static final int VEHICLE_ZONE_ROW_2_RIGHT = 0x00000040;
public static final int VEHICLE_ZONE_ROW_2_ALL = 0x00000080;
public static final int VEHICLE_ZONE_ROW_3_LEFT = 0x00000100;
public static final int VEHICLE_ZONE_ROW_3_CENTER = 0x00000200;
public static final int VEHICLE_ZONE_ROW_3_RIGHT = 0x00000400;
public static final int VEHICLE_ZONE_ROW_3_ALL = 0x00000800;
public static final int VEHICLE_ZONE_ROW_4_LEFT = 0x00001000;
public static final int VEHICLE_ZONE_ROW_4_CENTER = 0x00002000;
public static final int VEHICLE_ZONE_ROW_4_RIGHT = 0x00004000;
public static final int VEHICLE_ZONE_ROW_4_ALL = 0x00008000;
public static final int VEHICLE_ZONE_ALL = 0x80000000;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_ZONE_ROW_1_LEFT: return "VEHICLE_ZONE_ROW_1_LEFT";
case VEHICLE_ZONE_ROW_1_CENTER: return "VEHICLE_ZONE_ROW_1_CENTER";
case VEHICLE_ZONE_ROW_1_RIGHT: return "VEHICLE_ZONE_ROW_1_RIGHT";
case VEHICLE_ZONE_ROW_1_ALL: return "VEHICLE_ZONE_ROW_1_ALL";
case VEHICLE_ZONE_ROW_2_LEFT: return "VEHICLE_ZONE_ROW_2_LEFT";
case VEHICLE_ZONE_ROW_2_CENTER: return "VEHICLE_ZONE_ROW_2_CENTER";
case VEHICLE_ZONE_ROW_2_RIGHT: return "VEHICLE_ZONE_ROW_2_RIGHT";
case VEHICLE_ZONE_ROW_2_ALL: return "VEHICLE_ZONE_ROW_2_ALL";
case VEHICLE_ZONE_ROW_3_LEFT: return "VEHICLE_ZONE_ROW_3_LEFT";
case VEHICLE_ZONE_ROW_3_CENTER: return "VEHICLE_ZONE_ROW_3_CENTER";
case VEHICLE_ZONE_ROW_3_RIGHT: return "VEHICLE_ZONE_ROW_3_RIGHT";
case VEHICLE_ZONE_ROW_3_ALL: return "VEHICLE_ZONE_ROW_3_ALL";
case VEHICLE_ZONE_ROW_4_LEFT: return "VEHICLE_ZONE_ROW_4_LEFT";
case VEHICLE_ZONE_ROW_4_CENTER: return "VEHICLE_ZONE_ROW_4_CENTER";
case VEHICLE_ZONE_ROW_4_RIGHT: return "VEHICLE_ZONE_ROW_4_RIGHT";
case VEHICLE_ZONE_ROW_4_ALL: return "VEHICLE_ZONE_ROW_4_ALL";
case VEHICLE_ZONE_ALL: return "VEHICLE_ZONE_ALL";
default: return "UNKNOWN";
}
}
}

public static class VehicleSeat {
public static final int VEHICLE_SEAT_DRIVER_LHD = 0x0001;
public static final int VEHICLE_SEAT_DRIVER_RHD = 0x0002;
public static final int VEHICLE_SEAT_ROW_1_PASSENGER_LEFT = 0x0010;
public static final int VEHICLE_SEAT_ROW_1_PASSENGER_CENTER = 0x0020;
public static final int VEHICLE_SEAT_ROW_1_PASSENGER_RIGHT = 0x0040;
public static final int VEHICLE_SEAT_ROW_2_PASSENGER_LEFT = 0x0100;
public static final int VEHICLE_SEAT_ROW_2_PASSENGER_CENTER = 0x0200;
public static final int VEHICLE_SEAT_ROW_2_PASSENGER_RIGHT = 0x0400;
public static final int VEHICLE_SEAT_ROW_3_PASSENGER_LEFT = 0x1000;
public static final int VEHICLE_SEAT_ROW_3_PASSENGER_CENTER = 0x2000;
public static final int VEHICLE_SEAT_ROW_3_PASSENGER_RIGHT = 0x4000;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_SEAT_DRIVER_LHD: return "VEHICLE_SEAT_DRIVER_LHD";
case VEHICLE_SEAT_DRIVER_RHD: return "VEHICLE_SEAT_DRIVER_RHD";
case VEHICLE_SEAT_ROW_1_PASSENGER_LEFT: return "VEHICLE_SEAT_ROW_1_PASSENGER_LEFT";
case VEHICLE_SEAT_ROW_1_PASSENGER_CENTER: return "VEHICLE_SEAT_ROW_1_PASSENGER_CENTER";
case VEHICLE_SEAT_ROW_1_PASSENGER_RIGHT: return "VEHICLE_SEAT_ROW_1_PASSENGER_RIGHT";
case VEHICLE_SEAT_ROW_2_PASSENGER_LEFT: return "VEHICLE_SEAT_ROW_2_PASSENGER_LEFT";
case VEHICLE_SEAT_ROW_2_PASSENGER_CENTER: return "VEHICLE_SEAT_ROW_2_PASSENGER_CENTER";
case VEHICLE_SEAT_ROW_2_PASSENGER_RIGHT: return "VEHICLE_SEAT_ROW_2_PASSENGER_RIGHT";
case VEHICLE_SEAT_ROW_3_PASSENGER_LEFT: return "VEHICLE_SEAT_ROW_3_PASSENGER_LEFT";
case VEHICLE_SEAT_ROW_3_PASSENGER_CENTER: return "VEHICLE_SEAT_ROW_3_PASSENGER_CENTER";
case VEHICLE_SEAT_ROW_3_PASSENGER_RIGHT: return "VEHICLE_SEAT_ROW_3_PASSENGER_RIGHT";
default: return "UNKNOWN";
}
}
}

public static class VehicleWindow {
public static final int VEHICLE_WINDOW_FRONT_WINDSHIELD = 0x0001;
public static final int VEHICLE_WINDOW_REAR_WINDSHIELD = 0x0002;
public static final int VEHICLE_WINDOW_ROOF_TOP = 0x0004;
public static final int VEHICLE_WINDOW_ROW_1_LEFT = 0x0010;
public static final int VEHICLE_WINDOW_ROW_1_RIGHT = 0x0020;
public static final int VEHICLE_WINDOW_ROW_2_LEFT = 0x0100;
public static final int VEHICLE_WINDOW_ROW_2_RIGHT = 0x0200;
public static final int VEHICLE_WINDOW_ROW_3_LEFT = 0x1000;
public static final int VEHICLE_WINDOW_ROW_3_RIGHT = 0x2000;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_WINDOW_FRONT_WINDSHIELD: return "VEHICLE_WINDOW_FRONT_WINDSHIELD";
case VEHICLE_WINDOW_REAR_WINDSHIELD: return "VEHICLE_WINDOW_REAR_WINDSHIELD";
case VEHICLE_WINDOW_ROOF_TOP: return "VEHICLE_WINDOW_ROOF_TOP";
case VEHICLE_WINDOW_ROW_1_LEFT: return "VEHICLE_WINDOW_ROW_1_LEFT";
case VEHICLE_WINDOW_ROW_1_RIGHT: return "VEHICLE_WINDOW_ROW_1_RIGHT";
case VEHICLE_WINDOW_ROW_2_LEFT: return "VEHICLE_WINDOW_ROW_2_LEFT";
case VEHICLE_WINDOW_ROW_2_RIGHT: return "VEHICLE_WINDOW_ROW_2_RIGHT";
case VEHICLE_WINDOW_ROW_3_LEFT: return "VEHICLE_WINDOW_ROW_3_LEFT";
case VEHICLE_WINDOW_ROW_3_RIGHT: return "VEHICLE_WINDOW_ROW_3_RIGHT";
default: return "UNKNOWN";
}
}
}

public static class VehicleDoor {
public static final int VEHICLE_DOOR_ROW_1_LEFT = 0x00000001;
public static final int VEHICLE_DOOR_ROW_1_RIGHT = 0x00000004;
public static final int VEHICLE_DOOR_ROW_2_LEFT = 0x00000010;
public static final int VEHICLE_DOOR_ROW_2_RIGHT = 0x00000040;
public static final int VEHICLE_DOOR_ROW_3_LEFT = 0x00000100;
public static final int VEHICLE_DOOR_ROW_3_RIGHT = 0x00000400;
public static final int VEHICLE_DOOR_HOOD = 0x10000000;
public static final int VEHICLE_DOOR_REAR = 0x20000000;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_DOOR_ROW_1_LEFT: return "VEHICLE_DOOR_ROW_1_LEFT";
case VEHICLE_DOOR_ROW_1_RIGHT: return "VEHICLE_DOOR_ROW_1_RIGHT";
case VEHICLE_DOOR_ROW_2_LEFT: return "VEHICLE_DOOR_ROW_2_LEFT";
case VEHICLE_DOOR_ROW_2_RIGHT: return "VEHICLE_DOOR_ROW_2_RIGHT";
case VEHICLE_DOOR_ROW_3_LEFT: return "VEHICLE_DOOR_ROW_3_LEFT";
case VEHICLE_DOOR_ROW_3_RIGHT: return "VEHICLE_DOOR_ROW_3_RIGHT";
case VEHICLE_DOOR_HOOD: return "VEHICLE_DOOR_HOOD";
case VEHICLE_DOOR_REAR: return "VEHICLE_DOOR_REAR";
default: return "UNKNOWN";
}
}
}

public static class VehicleMirror {
public static final int VEHICLE_MIRROR_DRIVER_LEFT = 0x00000001;
public static final int VEHICLE_MIRROR_DRIVER_RIGHT = 0x00000002;
public static final int VEHICLE_MIRROR_DRIVER_CENTER = 0x00000004;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_MIRROR_DRIVER_LEFT: return "VEHICLE_MIRROR_DRIVER_LEFT";
case VEHICLE_MIRROR_DRIVER_RIGHT: return "VEHICLE_MIRROR_DRIVER_RIGHT";
case VEHICLE_MIRROR_DRIVER_CENTER: return "VEHICLE_MIRROR_DRIVER_CENTER";
default: return "UNKNOWN";
}
}
}

public static class VehicleTurnSignal {
public static final int VEHICLE_SIGNAL_NONE = 0x00;
public static final int VEHICLE_SIGNAL_RIGHT = 0x01;
public static final int VEHICLE_SIGNAL_LEFT = 0x02;
public static final int VEHICLE_SIGNAL_EMERGENCY = 0x04;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_SIGNAL_NONE: return "VEHICLE_SIGNAL_NONE";
case VEHICLE_SIGNAL_RIGHT: return "VEHICLE_SIGNAL_RIGHT";
case VEHICLE_SIGNAL_LEFT: return "VEHICLE_SIGNAL_LEFT";
case VEHICLE_SIGNAL_EMERGENCY: return "VEHICLE_SIGNAL_EMERGENCY";
default: return "UNKNOWN";
}
}
}

public static class VehicleBoolean {
public static final int VEHICLE_FALSE = 0x00;
public static final int VEHICLE_TRUE = 0x01;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_FALSE: return "VEHICLE_FALSE";
case VEHICLE_TRUE: return "VEHICLE_TRUE";
default: return "UNKNOWN";
}
}
}

public static class VehiclePropertyOperation {
public static final int VEHICLE_OPERATION_GENERIC = 0;
public static final int VEHICLE_OPERATION_SET = 1;
public static final int VEHICLE_OPERATION_GET = 2;
public static final int VEHICLE_OPERATION_SUBSCRIBE = 3;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_OPERATION_GENERIC: return "VEHICLE_OPERATION_GENERIC";
case VEHICLE_OPERATION_SET: return "VEHICLE_OPERATION_SET";
case VEHICLE_OPERATION_GET: return "VEHICLE_OPERATION_GET";
case VEHICLE_OPERATION_SUBSCRIBE: return "VEHICLE_OPERATION_SUBSCRIBE";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioStreamState {
public static final int VEHICLE_AUDIO_STREAM_STATE_STOPPED = 0;
public static final int VEHICLE_AUDIO_STREAM_STATE_STARTED = 1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_STREAM_STATE_STOPPED: return "VEHICLE_AUDIO_STREAM_STATE_STOPPED";
case VEHICLE_AUDIO_STREAM_STATE_STARTED: return "VEHICLE_AUDIO_STREAM_STATE_STARTED";
default: return "UNKNOWN";
}
}
}

public static class VehicleAudioStreamStateIndex {
public static final int VEHICLE_AUDIO_STREAM_STATE_INDEX_STATE = 0;
public static final int VEHICLE_AUDIO_STREAM_STATE_INDEX_STREAM = 1;
public static String enumToString(int v) {
switch(v) {
case VEHICLE_AUDIO_STREAM_STATE_INDEX_STATE: return "VEHICLE_AUDIO_STREAM_STATE_INDEX_STATE";
case VEHICLE_AUDIO_STREAM_STATE_INDEX_STREAM: return "VEHICLE_AUDIO_STREAM_STATE_INDEX_STREAM";
default: return "UNKNOWN";
}
}
}


}

