# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from recipe_engine import recipe_test_api

import common

class GpuTestApi(recipe_test_api.RecipeTestApi):
  @property
  def dummy_swarm_hashes(self):
    return dict(
      (target, '[dummy hash for %s]' % target)
        for target in common.GPU_ISOLATES)

  @property
  def dummy_win_fyi_swarm_hashes(self):
    return dict(
      (target, '[dummy hash for %s]' % target)
        for target in common.ALL_WIN_FYI_GPU_ISOLATES)

  @property
  def dummy_linux_fyi_swarm_hashes(self):
    return dict(
      (target, '[dummy hash for %s]' % target)
        for target in common.ALL_LINUX_FYI_GPU_ISOLATES)

  @property
  def dummy_angle_trybot_swarm_hashes(self):
    return dict(
      (target, '[dummy hash for %s]' % target)
        for target in common.ALL_ANGLE_TRYBOT_GPU_ISOLATES)

  def get_dummy_swarm_hashes_for_trybot(self, master):
    if master == 'tryserver.chromium.angle':
      return self.dummy_angle_trybot_swarm_hashes
    else:
      return self.dummy_swarm_hashes

  # The following data was generated by running 'gyp_chromium
  # --analyzer' with input JSON files corresponding to changes
  # affecting these targets.

  @property
  def analyze_builds_nothing(self):
    return self.m.json.output({
        'build_targets': [],
        'status': 'No dependencies',
        'targets': [],
        })

  @property
  def analyze_builds_angle_unittests(self):
    return self.m.json.output({
        'build_targets': ['All', 'angle_unittests'],
        'status': 'Found dependency',
        'targets': ['angle_unittests_run'],
        })

  @property
  def analyze_builds_pixel_test(self):
    return self.m.json.output({
        'build_targets': ['All'],
        'status': 'Found dependency',
        'targets': ['telemetry_gpu_test_run'],
        })

  @property
  def analyze_builds_everything(self):
    return self.m.json.output({
        'build_targets': sorted((
          # A few random targets from the Chrome build to try to
          # confuse the recipe
          'All', 'app_list_demo', 'app_list_unittests', 'app_shell',
          'chrome_initial') +
          # The names of our isolates (even though telemetry_gpu_test
          # won't actually be reported by analyze)
          common.GPU_ISOLATES ),
        'status': 'Found dependency',
        'targets': [u'%s_run' % test for test in common.GPU_ISOLATES],
        })
