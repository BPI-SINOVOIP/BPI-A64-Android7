[
  {
    "cmd": [
      "python",
      "-u",
      "\nimport json, os, sys\nif os.path.exists(sys.argv[1]) and os.path.isdir(sys.argv[1]):\n  with open(sys.argv[2], 'w') as f:\n    json.dump(os.listdir(sys.argv[1]), f)\n",
      "/fake/dir",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "listdir fake dir",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@[@@@",
      "@@@STEP_LOG_LINE@json.output@  \"file 1\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"file 2\"@@@",
      "@@@STEP_LOG_LINE@json.output@]@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import json, os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(sys.argv[1]) and os.path.isdir(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  with open(sys.argv[2], 'w') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@    json.dump(os.listdir(sys.argv[1]), f)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "some",
      "command"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "manipulate file 1"
  },
  {
    "cmd": [
      "some",
      "command"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "manipulate file 2"
  },
  {
    "cmd": [
      "echo",
      "[TMP_BASE]/prefix_a_tmp_1"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "print prefix_a"
  },
  {
    "cmd": [
      "echo",
      "[TMP_BASE]/prefix_b_tmp_2"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "print prefix_b"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys\nfrom common import chromium_utils\n\nchromium_utils.RemoveFilesWildcards(sys.argv[1], root=sys.argv[2])\n",
      "*.o",
      "[SLAVE_BUILD]"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "rmwildcard *.o in [SLAVE_BUILD]",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@from common import chromium_utils@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@chromium_utils.RemoveFilesWildcards(sys.argv[1], root=sys.argv[2])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "abcde",
      "tmp_file.txt"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "write_simple"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "tmp_file.txt",
      "/path/to/tmp/"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "read_simple"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "! ~&&",
      "tmp_file.txt"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "write_symbols"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "tmp_file.txt",
      "/path/to/tmp/"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "read_symbols"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "abcde fgh",
      "tmp_file.txt"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "write_spaces"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "tmp_file.txt",
      "/path/to/tmp/"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "read_spaces"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "ab\ncd\nefg\n",
      "tmp_file.txt"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "write_multiline"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "tmp_file.txt",
      "/path/to/tmp/"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "read_multiline"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport sys, os\npath = sys.argv[1]\nmode = int(sys.argv[2])\nif not os.path.isdir(path):\n  if os.path.exists(path):\n    print \"%s exists but is not a dir\" % path\n    sys.exit(1)\n  os.makedirs(path, mode)\n",
      "[SLAVE_BUILD]/copytree_example_tmp",
      "511"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "makedirs makedirs",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@mode = int(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@if not os.path.isdir(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  if os.path.exists(path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    print \"%s exists but is not a dir\" % path@@@",
      "@@@STEP_LOG_LINE@python.inline@    sys.exit(1)@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.makedirs(path, mode)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "some file content",
      "[SLAVE_BUILD]/copytree_example_tmp/dummy_file"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "write [SLAVE_BUILD]/copytree_example_tmp/dummy_file"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copytree(sys.argv[1], sys.argv[2], symlinks=bool(sys.argv[3]))\n",
      "[SLAVE_BUILD]/copytree_example_tmp",
      "[SLAVE_BUILD]/copytree_example_tmp2",
      "0"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "copytree"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[SLAVE_BUILD]/copytree_example_tmp2/dummy_file",
      "/path/to/tmp/"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "read [SLAVE_BUILD]/copytree_example_tmp2/dummy_file"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport glob\nimport sys\nwith open(sys.argv[1], 'w') as f:\n  f.write('\\n'.join(glob.glob(sys.argv[2])))\n",
      "/path/to/tmp/",
      "[SLAVE_BUILD]/copytree_example_tmp/*"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "glob"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os, sys\nfrom common import chromium_utils\n\nif os.path.exists(sys.argv[1]):\n  chromium_utils.RemoveDirectory(sys.argv[1])\n",
      "[SLAVE_BUILD]/copytree_example_tmp"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "rmtree cleanup",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@from common import chromium_utils@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  chromium_utils.RemoveDirectory(sys.argv[1])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os, sys\nfrom common import chromium_utils\n\nif os.path.exists(sys.argv[1]):\n  chromium_utils.RemoveDirectory(sys.argv[1])\n",
      "[SLAVE_BUILD]/copytree_example_tmp2"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "rmtree cleanup2",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@from common import chromium_utils@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  chromium_utils.RemoveDirectory(sys.argv[1])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]