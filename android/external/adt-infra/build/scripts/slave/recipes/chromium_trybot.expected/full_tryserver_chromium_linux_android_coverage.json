[
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/bot_update.py",
      "--master",
      "tryserver.chromium.linux",
      "--builder",
      "android_coverage",
      "--slave",
      "TestSlavename",
      "--spec",
      "cache_dir = None\nsolutions = [{'custom_vars': {'googlecode_url': 'svn://svn-mirror.golo.chromium.org/%s', 'nacl_trunk': 'svn://svn-mirror.golo.chromium.org/native_client/trunk', 'sourceforge_url': 'svn://svn-mirror.golo.chromium.org/%(repo)s', 'webkit_trunk': 'svn://svn-mirror.golo.chromium.org/blink/trunk'}, 'deps_file': 'DEPS', 'managed': True, 'name': 'src', 'url': 'svn://svn-mirror.golo.chromium.org/chrome/trunk/src'}]\ntarget_os = ['android']",
      "--root",
      "src",
      "--revision_mapping_file",
      "{\"src\": \"got_revision\", \"src/native_client\": \"got_nacl_revision\", \"src/third_party/angle\": \"got_angle_revision\", \"src/third_party/webrtc\": \"got_webrtc_revision\", \"src/tools/swarming_client\": \"got_swarming_client_revision\", \"src/v8\": \"got_v8_revision\"}",
      "--issue",
      "12853011",
      "--patchset",
      "1",
      "--rietveld_server",
      "https://codereview.chromium.org",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "src@HEAD",
      "--output_manifest"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "bot_update",
    "~followup_annotations": [
      "@@@STEP_TEXT@Some step text@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"src\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/native_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/native_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"d998e125e8253980d76e269b7982aeeefc1b9b50\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/angle\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/third_party/angle.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"fac9503c46405f77757b9a728eb85b8d7bc6080c\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/webrtc\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/third_party/webrtc.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"0f90628433546e61d9268596da93418c623137f4\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/tools/swarming_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/tools/swarming_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/v8\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/v8.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"801ada225ddc271c132c3a35f03975671d43e399\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_root\": \"src\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"properties\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_angle_revision\": \"fac9503c46405f77757b9a728eb85b8d7bc6080c\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_angle_revision_cp\": \"refs/heads/master@{#297276}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_nacl_revision\": \"d998e125e8253980d76e269b7982aeeefc1b9b50\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_nacl_revision_cp\": \"refs/heads/master@{#274981}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision\": \"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision_cp\": \"refs/heads/master@{#170242}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_swarming_client_revision\": \"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_swarming_client_revision_cp\": \"refs/heads/master@{#276089}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_v8_revision\": \"801ada225ddc271c132c3a35f03975671d43e399\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_v8_revision_cp\": \"refs/heads/master@{#43426}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_webrtc_revision\": \"0f90628433546e61d9268596da93418c623137f4\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_webrtc_revision_cp\": \"refs/heads/master@{#120644}\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"root\": \"src\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"step_text\": \"Some step text\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_nacl_revision@\"d998e125e8253980d76e269b7982aeeefc1b9b50\"@@@",
      "@@@SET_BUILD_PROPERTY@got_swarming_client_revision@\"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\"@@@",
      "@@@SET_BUILD_PROPERTY@got_webrtc_revision@\"0f90628433546e61d9268596da93418c623137f4\"@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@\"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\"@@@",
      "@@@SET_BUILD_PROPERTY@got_nacl_revision_cp@\"refs/heads/master@{#274981}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_angle_revision@\"fac9503c46405f77757b9a728eb85b8d7bc6080c\"@@@",
      "@@@SET_BUILD_PROPERTY@got_v8_revision@\"801ada225ddc271c132c3a35f03975671d43e399\"@@@",
      "@@@SET_BUILD_PROPERTY@got_v8_revision_cp@\"refs/heads/master@{#43426}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_swarming_client_revision_cp@\"refs/heads/master@{#276089}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_webrtc_revision_cp@\"refs/heads/master@{#120644}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_revision_cp@\"refs/heads/master@{#170242}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_angle_revision_cp@\"refs/heads/master@{#297276}\"@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "runhooks"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "GYP_CROSSCOMPILE": "1",
      "GYP_DEFINES": "OS=android component=static_library dcheck_always_on=1 emma_coverage=1 emma_filter='org.chromium.content.browser.*' fastbuild=1 gomadir='[BUILD]/goma' target_arch=arm use_goma=1",
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "gclient runhooks (with patch)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[SLAVE_BUILD]/src/testing/buildbot/chromium.fyi.json",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "read test spec",
    "~followup_annotations": [
      "@@@STEP_TEXT@path: [SLAVE_BUILD]/src/testing/buildbot/chromium.fyi.json@@@",
      "@@@STEP_LOG_LINE@json.output@{}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/testing/scripts/get_compile_targets.py",
      "--output",
      "/path/to/tmp/json",
      "--",
      "--build-config-fs",
      "Debug",
      "--paths",
      "{\"build\": \"[BUILD]\", \"checkout\": \"[SLAVE_BUILD]/src\"}",
      "--properties",
      "{\"buildername\": \"android_coverage\", \"buildnumber\": 571, \"mastername\": \"tryserver.chromium.linux\", \"slavename\": \"TestSlavename\", \"target_platform\": \"android\"}"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "get compile targets for scripts",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "diff",
      "--cached",
      "--name-only"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "git diff to analyze patch",
    "stdout": "/path/to/tmp/",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@files@foo.cc@@@",
      "@@@STEP_LOG_END@files@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[SLAVE_BUILD]/src/testing/buildbot/trybot_analyze_config.json",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "read filter exclusion spec",
    "~followup_annotations": [
      "@@@STEP_TEXT@path: 'testing/buildbot/trybot_analyze_config.json'@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"base\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"exclusions\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      \"f.*\"@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"chromium\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"exclusions\": []@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "import sys; sys.exit(0)"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "analyze",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@excluded_files@foo.cc (regex = 'f.*')@@@",
      "@@@STEP_LOG_END@excluded_files@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/cleanup_temp.py"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "cleanup_temp"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil, sys, os\nshutil.rmtree(sys.argv[1], True)\nshutil.rmtree(sys.argv[2], True)\ntry:\n  os.remove(sys.argv[3])\nexcept OSError:\n  pass\nfor base, _dirs, files in os.walk(sys.argv[4]):\n  for f in files:\n    if f.endswith('.pyc'):\n      os.remove(os.path.join(base, f))\n",
      "[SLAVE_BUILD]/src/out/Debug/debug_info_dumps",
      "[SLAVE_BUILD]/src/out/Debug/test_logs",
      "[SLAVE_BUILD]/src/out/build_product.zip",
      "[SLAVE_BUILD]/src"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "clean local files",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import shutil, sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[1], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[2], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@try:@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.remove(sys.argv[3])@@@",
      "@@@STEP_LOG_LINE@python.inline@except OSError:@@@",
      "@@@STEP_LOG_LINE@python.inline@  pass@@@",
      "@@@STEP_LOG_LINE@python.inline@for base, _dirs, files in os.walk(sys.argv[4]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  for f in files:@@@",
      "@@@STEP_LOG_LINE@python.inline@    if f.endswith('.pyc'):@@@",
      "@@@STEP_LOG_LINE@python.inline@      os.remove(os.path.join(base, f))@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "allow_subannotations": false,
    "cmd": [
      "[SLAVE_BUILD]/src/build/tree_truth.sh",
      "[SLAVE_BUILD]/src",
      "src"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "tree truth steps"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/compile.py",
      "--target",
      "Debug",
      "--src-dir",
      "[SLAVE_BUILD]/src",
      "--build-tool",
      "ninja",
      "--compiler",
      "goma",
      "--goma-jsonstatus",
      "/path/to/tmp/json",
      "--goma-dir",
      "[BUILD]/goma",
      "--goma-fail-fast",
      "--goma-disable-local-fallback",
      "--",
      "android_webview_test_apk",
      "chrome_public_test_apk",
      "chrome_sync_shell_test_apk",
      "content_shell_test_apk"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "compile (with patch)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output (invalid)@null@@@",
      "@@@STEP_LOG_END@json.output (invalid)@@@"
    ]
  },
  {
    "cmd": [
      "[BUILD]/scripts/slave/daemonizer.py",
      "--",
      "[SLAVE_BUILD]/src/build/android/adb_logcat_monitor.py",
      "[SLAVE_BUILD]/src/out/logcat"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "spawn_logcat_monitor"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/android/authorize_adb_devices.py",
      "--verbose",
      "--adb-path",
      "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools/adb"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "authorize_adb_devices"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/buildbot/bb_device_status_check.py",
      "--json-output",
      "/path/to/tmp/json",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "device_status_check",
    "~followup_annotations": [
      "@@@STEP_TEXT@Online devices: 1@@@",
      "@@@STEP_LOG_LINE@json.output@[@@@",
      "@@@STEP_LOG_LINE@json.output@  {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"adb_status\": \"device\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"battery\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"AC powered\": \"false\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"USB powered\": \"true\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"Wireless powered\": \"false\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"health\": \"2\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"level\": \"100\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"present\": \"true\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"scale\": \"100\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"status\": \"5\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"technology\": \"Li-ion\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"temperature\": \"249\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"voltage\": \"4286\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"blacklisted\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"build\": \"LRX21O\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"build_detail\": \"google/razor/flo:5.0/LRX21O/1570415:userdebug/dev-keys\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"imei_slice\": \"Unknown\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"serial\": \"07a00ca4\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"type\": \"flo\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"usb_status\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"wifi_ip\": \"\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"adb_status\": \"offline\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"blacklisted\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"serial\": \"03e0363a003c6ad4\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"usb_status\": false@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"adb_status\": \"unauthorized\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"blacklisted\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"serial\": \"03e0363a003c6ad5\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"usb_status\": true@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"adb_status\": \"device\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"blacklisted\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"serial\": \"03e0363a003c6ad6\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"usb_status\": true@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@]@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@{@@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  \"adb_status\": \"device\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  \"battery\": {@@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"AC powered\": \"false\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"USB powered\": \"true\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"Wireless powered\": \"false\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"health\": \"2\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"level\": \"100\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"present\": \"true\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"scale\": \"100\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"status\": \"5\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"technology\": \"Li-ion\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"temperature\": \"249\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@    \"voltage\": \"4286\"@@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  }, @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  \"blacklisted\": false, @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  \"build\": \"LRX21O\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  \"build_detail\": \"google/razor/flo:5.0/LRX21O/1570415:userdebug/dev-keys\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  \"imei_slice\": \"Unknown\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  \"serial\": \"07a00ca4\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  \"type\": \"flo\", @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  \"usb_status\": true, @@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@  \"wifi_ip\": \"\"@@@",
      "@@@STEP_LOG_LINE@flo LRX21O 07a00ca4@}@@@",
      "@@@STEP_LOG_END@flo LRX21O 07a00ca4@@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad4: missing@{@@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad4: missing@  \"adb_status\": \"offline\", @@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad4: missing@  \"blacklisted\": true, @@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad4: missing@  \"serial\": \"03e0363a003c6ad4\", @@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad4: missing@  \"usb_status\": false@@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad4: missing@}@@@",
      "@@@STEP_LOG_END@03e0363a003c6ad4: missing@@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad5: adb status unauthorized@{@@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad5: adb status unauthorized@  \"adb_status\": \"unauthorized\", @@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad5: adb status unauthorized@  \"blacklisted\": true, @@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad5: adb status unauthorized@  \"serial\": \"03e0363a003c6ad5\", @@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad5: adb status unauthorized@  \"usb_status\": true@@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad5: adb status unauthorized@}@@@",
      "@@@STEP_LOG_END@03e0363a003c6ad5: adb status unauthorized@@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad6: blacklisted@{@@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad6: blacklisted@  \"adb_status\": \"device\", @@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad6: blacklisted@  \"blacklisted\": true, @@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad6: blacklisted@  \"serial\": \"03e0363a003c6ad6\", @@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad6: blacklisted@  \"usb_status\": true@@@",
      "@@@STEP_LOG_LINE@03e0363a003c6ad6: blacklisted@}@@@",
      "@@@STEP_LOG_END@03e0363a003c6ad6: blacklisted@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/provision_devices.py",
      "-t",
      "Debug",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json",
      "--output-device-blacklist",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "provision_devices"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/daemonizer.py",
      "--action",
      "restart",
      "--pid-file-path",
      "/tmp/device_monitor.pid",
      "--",
      "RECIPE_MODULE[chromium_android]/resources/spawn_device_temp_monitor.py",
      "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools/adb",
      "[\"07a00ca4\"]",
      "tryserver.chromium.linux",
      "android_coverage"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "spawn_device_temp_monitor"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/adb_install_apk.py",
      "AndroidWebView.apk",
      "-v",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "install AndroidWebView.apk"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/test_runner.py",
      "instrumentation",
      "--test-apk",
      "AndroidWebViewTest",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json",
      "--isolate-file-path",
      "android_webview/android_webview_test_apk.isolate",
      "--flakiness-dashboard-server",
      "test-results.appspot.com",
      "--verbose",
      "--coverage-dir",
      "[SLAVE_BUILD]/src/out/Debug/coverage",
      "--json-results-file",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Instrumentation test AndroidWebViewTest (with patch)",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>failures:<br/>TestB<br/>@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/adb_install_apk.py",
      "ChromePublic.apk",
      "-v",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "install ChromePublic.apk"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/test_runner.py",
      "instrumentation",
      "--test-apk",
      "ChromePublicTest",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json",
      "--isolate-file-path",
      "chrome/chrome_public_test_apk.isolate",
      "--flakiness-dashboard-server",
      "test-results.appspot.com",
      "--verbose",
      "--coverage-dir",
      "[SLAVE_BUILD]/src/out/Debug/coverage",
      "--json-results-file",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Instrumentation test ChromePublicTest (with patch)",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>failures:<br/>TestB<br/>@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/adb_install_apk.py",
      "ContentShell.apk",
      "-v",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "install ContentShell.apk"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/test_runner.py",
      "instrumentation",
      "--test-apk",
      "ContentShellTest",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json",
      "--isolate-file-path",
      "content/content_shell_test_apk.isolate",
      "--flakiness-dashboard-server",
      "test-results.appspot.com",
      "--verbose",
      "--coverage-dir",
      "[SLAVE_BUILD]/src/out/Debug/coverage",
      "--json-results-file",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Instrumentation test ContentShellTest (with patch)",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>failures:<br/>TestB<br/>@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/adb_install_apk.py",
      "ChromeSyncShell.apk",
      "-v",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "install ChromeSyncShell.apk"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/test_runner.py",
      "instrumentation",
      "--test-apk",
      "ChromeSyncShellTest",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json",
      "--flakiness-dashboard-server",
      "test-results.appspot.com",
      "--verbose",
      "--coverage-dir",
      "[SLAVE_BUILD]/src/out/Debug/coverage",
      "--json-results-file",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Instrumentation test ChromeSyncShellTest (with patch)",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>failures:<br/>TestB<br/>@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/generate_emma_html.py",
      "--coverage-dir",
      "[SLAVE_BUILD]/src/out/Debug/coverage",
      "--metadata-dir",
      "[SLAVE_BUILD]/src/out/Debug",
      "--cleanup",
      "--output",
      "[SLAVE_BUILD]/src/out/Debug/coverage/coverage_html/index.html"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Generate coverage report"
  },
  {
    "cmd": [
      "git",
      "diff",
      "--staged",
      "--name-only",
      "--diff-filter",
      "A"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "Finding changed files matching diff filter: A",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "fake/file1.java",
      "/path/to/tmp/"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Finding lines changed in added file fake/file1.java"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "fake/file2.java;",
      "/path/to/tmp/"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Finding lines changed in added file fake/file2.java;"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "fake/file3.java",
      "/path/to/tmp/"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Finding lines changed in added file fake/file3.java"
  },
  {
    "cmd": [
      "git",
      "diff",
      "--staged",
      "--name-only",
      "--diff-filter",
      "M"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "Finding changed files matching diff filter: M",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "git",
      "blame",
      "-l",
      "-s",
      "fake/file1.java"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "Finding lines changed in modified file fake/file1.java",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "git",
      "blame",
      "-l",
      "-s",
      "fake/file2.java;"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "Finding lines changed in modified file fake/file2.java;",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "git",
      "blame",
      "-l",
      "-s",
      "fake/file3.java"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "Finding lines changed in modified file fake/file3.java",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "{\"fake/file1.java\": [], \"fake/file2.java;\": [], \"fake/file3.java\": []}",
      "[TMP_BASE]/coverage_tmp_1/file_changes.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Saving changed lines for revision."
  },
  {
    "cmd": [
      "python",
      "-u",
      "build/android/emma_coverage_stats.py",
      "-v",
      "--out",
      "/path/to/tmp/json",
      "--emma-dir",
      "[SLAVE_BUILD]/src/out/Debug/coverage/coverage_html",
      "--lines-for-coverage",
      "[TMP_BASE]/coverage_tmp_1/file_changes.json"
    ],
    "cwd": "[SLAVE_BUILD]/src",
    "name": "Incremental coverage report",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"files\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"sample file 1\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"absolute\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"covered\": 70, @@@",
      "@@@STEP_LOG_LINE@json.output@        \"total\": 100@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"incremental\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"covered\": 30, @@@",
      "@@@STEP_LOG_LINE@json.output@        \"total\": 50@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"sample file 2\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"absolute\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"covered\": 50, @@@",
      "@@@STEP_LOG_LINE@json.output@        \"total\": 100@@@",
      "@@@STEP_LOG_LINE@json.output@      }, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"incremental\": {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"covered\": 50, @@@",
      "@@@STEP_LOG_LINE@json.output@        \"total\": 50@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"incremental\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"covered\": 80, @@@",
      "@@@STEP_LOG_LINE@json.output@      \"total\": 100@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@moreInfoURL@\"http://c.org/p/cr/builders/android_coverage/builds/571/steps/Incremental%20coverage%20report/logs/json.output\"@@@",
      "@@@SET_BUILD_PROPERTY@summary@\"Test coverage for this patch: 80/100 lines (80%).\"@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/bot_update.py",
      "--master",
      "tryserver.chromium.linux",
      "--builder",
      "android_coverage",
      "--slave",
      "TestSlavename",
      "--spec",
      "cache_dir = None\nsolutions = [{'custom_vars': {'googlecode_url': 'svn://svn-mirror.golo.chromium.org/%s', 'nacl_trunk': 'svn://svn-mirror.golo.chromium.org/native_client/trunk', 'sourceforge_url': 'svn://svn-mirror.golo.chromium.org/%(repo)s', 'webkit_trunk': 'svn://svn-mirror.golo.chromium.org/blink/trunk'}, 'deps_file': 'DEPS', 'managed': True, 'name': 'src', 'url': 'svn://svn-mirror.golo.chromium.org/chrome/trunk/src'}]\ntarget_os = ['android']",
      "--root",
      "src",
      "--revision_mapping_file",
      "{\"src\": \"got_revision\", \"src/native_client\": \"got_nacl_revision\", \"src/third_party/angle\": \"got_angle_revision\", \"src/third_party/webrtc\": \"got_webrtc_revision\", \"src/tools/swarming_client\": \"got_swarming_client_revision\", \"src/v8\": \"got_v8_revision\"}",
      "--rietveld_server",
      "https://codereview.chromium.org",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "src@f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9",
      "--revision",
      "src/native_client@d998e125e8253980d76e269b7982aeeefc1b9b50",
      "--revision",
      "src/third_party/angle@fac9503c46405f77757b9a728eb85b8d7bc6080c",
      "--revision",
      "src/third_party/webrtc@0f90628433546e61d9268596da93418c623137f4",
      "--revision",
      "src/tools/swarming_client@a0ee5d99f1d4b38ddaa4c759c837980b63b99566",
      "--revision",
      "src/v8@801ada225ddc271c132c3a35f03975671d43e399",
      "--force",
      "--output_manifest"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "bot_update (without patch)",
    "~followup_annotations": [
      "@@@STEP_TEXT@Some step text@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"src\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/native_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/native_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"d998e125e8253980d76e269b7982aeeefc1b9b50\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/angle\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/third_party/angle.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"fac9503c46405f77757b9a728eb85b8d7bc6080c\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/webrtc\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/third_party/webrtc.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"0f90628433546e61d9268596da93418c623137f4\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/tools/swarming_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/tools/swarming_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/v8\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/v8.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"801ada225ddc271c132c3a35f03975671d43e399\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_root\": \"src\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"properties\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_angle_revision\": \"fac9503c46405f77757b9a728eb85b8d7bc6080c\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_angle_revision_cp\": \"refs/heads/master@{#297276}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_nacl_revision\": \"d998e125e8253980d76e269b7982aeeefc1b9b50\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_nacl_revision_cp\": \"refs/heads/master@{#274981}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision\": \"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision_cp\": \"refs/heads/master@{#170242}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_swarming_client_revision\": \"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_swarming_client_revision_cp\": \"refs/heads/master@{#276089}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_v8_revision\": \"801ada225ddc271c132c3a35f03975671d43e399\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_v8_revision_cp\": \"refs/heads/master@{#43426}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_webrtc_revision\": \"0f90628433546e61d9268596da93418c623137f4\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_webrtc_revision_cp\": \"refs/heads/master@{#120644}\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"root\": \"src\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"step_text\": \"Some step text\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "runhooks"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "GYP_CROSSCOMPILE": "1",
      "GYP_DEFINES": "OS=android component=static_library dcheck_always_on=1 emma_coverage=1 emma_filter='org.chromium.content.browser.*' fastbuild=1 gomadir='[BUILD]/goma' target_arch=arm use_goma=1",
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "gclient runhooks (without patch)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/compile.py",
      "--target",
      "Debug",
      "--src-dir",
      "[SLAVE_BUILD]/src",
      "--build-tool",
      "ninja",
      "--compiler",
      "goma",
      "--goma-jsonstatus",
      "/path/to/tmp/json",
      "--goma-dir",
      "[BUILD]/goma",
      "--goma-fail-fast",
      "--goma-disable-local-fallback",
      "--",
      "android_webview_test_apk",
      "chrome_public_test_apk",
      "chrome_sync_shell_test_apk",
      "content_shell_test_apk"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "compile (without patch)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output (invalid)@null@@@",
      "@@@STEP_LOG_END@json.output (invalid)@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/adb_install_apk.py",
      "AndroidWebView.apk",
      "-v",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "install AndroidWebView.apk (2)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/test_runner.py",
      "instrumentation",
      "--test-apk",
      "AndroidWebViewTest",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json",
      "--isolate-file-path",
      "android_webview/android_webview_test_apk.isolate",
      "--flakiness-dashboard-server",
      "test-results.appspot.com",
      "--verbose",
      "--coverage-dir",
      "[SLAVE_BUILD]/src/out/Debug/coverage",
      "--json-results-file",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Instrumentation test AndroidWebViewTest (without patch)",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>failures:<br/>TestB<br/>@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/adb_install_apk.py",
      "ChromePublic.apk",
      "-v",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "install ChromePublic.apk (2)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/test_runner.py",
      "instrumentation",
      "--test-apk",
      "ChromePublicTest",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json",
      "--isolate-file-path",
      "chrome/chrome_public_test_apk.isolate",
      "--flakiness-dashboard-server",
      "test-results.appspot.com",
      "--verbose",
      "--coverage-dir",
      "[SLAVE_BUILD]/src/out/Debug/coverage",
      "--json-results-file",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Instrumentation test ChromePublicTest (without patch)",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>failures:<br/>TestB<br/>@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/adb_install_apk.py",
      "ContentShell.apk",
      "-v",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "install ContentShell.apk (2)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/test_runner.py",
      "instrumentation",
      "--test-apk",
      "ContentShellTest",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json",
      "--isolate-file-path",
      "content/content_shell_test_apk.isolate",
      "--flakiness-dashboard-server",
      "test-results.appspot.com",
      "--verbose",
      "--coverage-dir",
      "[SLAVE_BUILD]/src/out/Debug/coverage",
      "--json-results-file",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Instrumentation test ContentShellTest (without patch)",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>failures:<br/>TestB<br/>@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/adb_install_apk.py",
      "ChromeSyncShell.apk",
      "-v",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "install ChromeSyncShell.apk (2)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/test_runner.py",
      "instrumentation",
      "--test-apk",
      "ChromeSyncShellTest",
      "--blacklist-file",
      "[SLAVE_BUILD]/src/out/bad_devices.json",
      "--flakiness-dashboard-server",
      "test-results.appspot.com",
      "--verbose",
      "--coverage-dir",
      "[SLAVE_BUILD]/src/out/Debug/coverage",
      "--json-results-file",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Instrumentation test ChromeSyncShellTest (without patch)",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>failures:<br/>TestB<br/>@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "import sys; sys.exit(0)"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "AndroidWebViewTest",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>ignored:<br/>TestB<br/>@@@",
      "@@@STEP_WARNINGS@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "import sys; sys.exit(0)"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "ChromePublicTest",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>ignored:<br/>TestB<br/>@@@",
      "@@@STEP_WARNINGS@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "import sys; sys.exit(0)"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "ContentShellTest",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>ignored:<br/>TestB<br/>@@@",
      "@@@STEP_WARNINGS@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "import sys; sys.exit(0)"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "ChromeSyncShellTest",
    "~followup_annotations": [
      "@@@STEP_TEXT@<br/>ignored:<br/>TestB<br/>@@@",
      "@@@STEP_WARNINGS@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/daemonizer.py",
      "--action",
      "stop",
      "--pid-file-path",
      "/tmp/device_monitor.pid"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "shutdown_device_temp_monitor"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/build/android/adb_logcat_printer.py",
      "--output-path",
      "[SLAVE_BUILD]/src/out/Debug/full_log",
      "[SLAVE_BUILD]/src/out/logcat"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "logcat_dump"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[gsutil]/resources/gsutil_wrapper.py",
      "--",
      "[DEPOT_TOOLS]/gsutil.py",
      "--force-version",
      "4.7",
      "----",
      "cp",
      "[SLAVE_BUILD]/src/out/Debug/full_log",
      "gs://chromium-android/logcat_dumps/android_coverage/571"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "gsutil upload",
    "~followup_annotations": [
      "@@@STEP_LINK@logcat dump@https://storage.cloud.google.com/chromium-android/logcat_dumps/android_coverage/571@@@"
    ]
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/third_party/android_platform/development/scripts/stack",
      "--arch",
      "arm",
      "--more-info",
      "[SLAVE_BUILD]/src/out/Debug/full_log"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "stack_tool_with_logcat_dump"
  },
  {
    "cmd": [
      "[SLAVE_BUILD]/src/build/android/tombstones.py",
      "-a",
      "-s",
      "-w"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "stack_tool_for_tombstones"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport glob, os, sys\nfor report in glob.glob(sys.argv[1]):\n  with open(report, 'r') as f:\n    for l in f.readlines():\n      print l\n  os.remove(report)\n",
      "[SLAVE_BUILD]/src/out/Debug/test_logs/*.log"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "test_report",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import glob, os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@for report in glob.glob(sys.argv[1]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  with open(report, 'r') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@    for l in f.readlines():@@@",
      "@@@STEP_LOG_LINE@python.inline@      print l@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.remove(report)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]