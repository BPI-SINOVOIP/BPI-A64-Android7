[
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os, sys\n\nbuild_path = sys.argv[1]\nif os.path.exists(build_path):\n  for (path, dir, files) in os.walk(build_path):\n    for cur_file in files:\n      if cur_file.endswith('index.lock'):\n        path_to_file = os.path.join(path, cur_file)\n        print 'deleting %s' % path_to_file\n        os.remove(path_to_file)\n",
      "[SLAVE_BUILD]"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "cleanup index.lock",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os, sys@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@build_path = sys.argv[1]@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(build_path):@@@",
      "@@@STEP_LOG_LINE@python.inline@  for (path, dir, files) in os.walk(build_path):@@@",
      "@@@STEP_LOG_LINE@python.inline@    for cur_file in files:@@@",
      "@@@STEP_LOG_LINE@python.inline@      if cur_file.endswith('index.lock'):@@@",
      "@@@STEP_LOG_LINE@python.inline@        path_to_file = os.path.join(path, cur_file)@@@",
      "@@@STEP_LOG_LINE@python.inline@        print 'deleting %s' % path_to_file@@@",
      "@@@STEP_LOG_LINE@python.inline@        os.remove(path_to_file)@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/bot_update.py",
      "--master",
      "chromium.testing.master",
      "--builder",
      "dartium-builder",
      "--slave",
      "TestSlavename",
      "--spec",
      "cache_dir = None\nsolutions = [{'deps_file': 'DEPS', 'managed': True, 'name': 'dartium.deps', 'url': 'https://dart.googlecode.com/svn/trunk/deps/dartium.deps'}]\ntarget_os = ['android']",
      "--root",
      "dartium.deps",
      "--revision_mapping_file",
      "{}",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "dartium.deps@34567",
      "--output_manifest"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "bot_update",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "config",
      "--spec",
      "cache_dir = None\nsolutions = [{'deps_file': 'DEPS', 'managed': True, 'name': 'dartium.deps', 'url': 'https://dart.googlecode.com/svn/trunk/deps/dartium.deps'}]\ntarget_os = ['android']"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "gclient setup"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "sync",
      "--nohooks",
      "--force",
      "--verbose",
      "--delete_unversioned_trees",
      "--revision",
      "dartium.deps@34567",
      "--revision",
      "src/dart@34567",
      "--output-json",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "gclient sync",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"solutions\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"dartium.deps/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 10382@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 170242@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/native_client/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 274981@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/angle/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 297276@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/webrtc/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 120644@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/tools/swarming_client/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 276089@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/v8/\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": 43426@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_nacl_revision@274981@@@",
      "@@@SET_BUILD_PROPERTY@got_src_revision@170242@@@",
      "@@@SET_BUILD_PROPERTY@got_webrtc_revision@120644@@@",
      "@@@SET_BUILD_PROPERTY@got_swarming_client_revision@276089@@@",
      "@@@SET_BUILD_PROPERTY@got_angle_revision@297276@@@",
      "@@@SET_BUILD_PROPERTY@got_v8_revision@43426@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil, sys, os\nshutil.rmtree(sys.argv[1], True)\nshutil.rmtree(sys.argv[2], True)\ntry:\n  os.remove(sys.argv[3])\nexcept OSError:\n  pass\nfor base, _dirs, files in os.walk(sys.argv[4]):\n  for f in files:\n    if f.endswith('.pyc'):\n      os.remove(os.path.join(base, f))\n",
      "[SLAVE_BUILD]/src/out/Release/debug_info_dumps",
      "[SLAVE_BUILD]/src/out/Release/test_logs",
      "[SLAVE_BUILD]/src/out/build_product.zip",
      "[SLAVE_BUILD]/src"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "clean local files",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import shutil, sys, os@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[1], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.rmtree(sys.argv[2], True)@@@",
      "@@@STEP_LOG_LINE@python.inline@try:@@@",
      "@@@STEP_LOG_LINE@python.inline@  os.remove(sys.argv[3])@@@",
      "@@@STEP_LOG_LINE@python.inline@except OSError:@@@",
      "@@@STEP_LOG_LINE@python.inline@  pass@@@",
      "@@@STEP_LOG_LINE@python.inline@for base, _dirs, files in os.walk(sys.argv[4]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  for f in files:@@@",
      "@@@STEP_LOG_LINE@python.inline@    if f.endswith('.pyc'):@@@",
      "@@@STEP_LOG_LINE@python.inline@      os.remove(os.path.join(base, f))@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "runhooks"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "GYP_CROSSCOMPILE": "1",
      "GYP_DEFINES": "OS=android component=static_library fastbuild=1 gomadir='[BUILD]/goma' target_arch=arm use_goma=1",
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "gclient runhooks"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/compile.py",
      "--target",
      "Release",
      "--src-dir",
      "[SLAVE_BUILD]/src",
      "--build-tool",
      "ninja",
      "--compiler",
      "goma",
      "--goma-jsonstatus",
      "/path/to/tmp/json",
      "--goma-dir",
      "[BUILD]/goma",
      "--",
      "content_shell_apk"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "PATH": "[SLAVE_BUILD]/src/third_party/android_tools/sdk/platform-tools:[SLAVE_BUILD]/src/build/android:%(PATH)s"
    },
    "name": "compile",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output (invalid)@null@@@",
      "@@@STEP_LOG_END@json.output (invalid)@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[SLAVE_BUILD]/src/dart/tools/bots/dartium_android.py",
      "--build-products-dir",
      "[SLAVE_BUILD]/src/out/Release"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "dartium_test"
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]