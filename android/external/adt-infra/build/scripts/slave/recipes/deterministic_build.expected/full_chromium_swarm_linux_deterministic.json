[
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/cleanup_temp.py"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "cleanup_temp"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/bot_update.py",
      "--master",
      "chromium.swarm",
      "--builder",
      "linux_deterministic",
      "--slave",
      "TestSlavename",
      "--spec",
      "cache_dir = None\nsolutions = [{'custom_vars': {'googlecode_url': 'svn://svn-mirror.golo.chromium.org/%s', 'nacl_trunk': 'svn://svn-mirror.golo.chromium.org/native_client/trunk', 'sourceforge_url': 'svn://svn-mirror.golo.chromium.org/%(repo)s', 'webkit_trunk': 'svn://svn-mirror.golo.chromium.org/blink/trunk'}, 'deps_file': 'DEPS', 'managed': True, 'name': 'src', 'url': 'svn://svn-mirror.golo.chromium.org/chrome/trunk/src'}]",
      "--root",
      "src",
      "--revision_mapping_file",
      "{\"src\": \"got_revision\", \"src/native_client\": \"got_nacl_revision\", \"src/third_party/angle\": \"got_angle_revision\", \"src/third_party/webrtc\": \"got_webrtc_revision\", \"src/tools/swarming_client\": \"got_swarming_client_revision\", \"src/v8\": \"got_v8_revision\"}",
      "--output_json",
      "/path/to/tmp/json",
      "--revision",
      "src@204787",
      "--force",
      "--output_manifest"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "bot_update",
    "~followup_annotations": [
      "@@@STEP_TEXT@Some step text@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"did_run\": true, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"manifest\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"src\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/native_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/native_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"d998e125e8253980d76e269b7982aeeefc1b9b50\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/angle\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/third_party/angle.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"fac9503c46405f77757b9a728eb85b8d7bc6080c\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/third_party/webrtc\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/third_party/webrtc.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"0f90628433546e61d9268596da93418c623137f4\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/tools/swarming_client\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/tools/swarming_client.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    \"src/v8\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"repository\": \"https://fake.org/src/v8.git\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"revision\": \"801ada225ddc271c132c3a35f03975671d43e399\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_failure\": false, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"patch_root\": \"src\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"properties\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_angle_revision\": \"fac9503c46405f77757b9a728eb85b8d7bc6080c\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_angle_revision_cp\": \"refs/heads/master@{#297276}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_nacl_revision\": \"d998e125e8253980d76e269b7982aeeefc1b9b50\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_nacl_revision_cp\": \"refs/heads/master@{#274981}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision\": \"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_revision_cp\": \"refs/heads/master@{#170242}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_swarming_client_revision\": \"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_swarming_client_revision_cp\": \"refs/heads/master@{#276089}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_v8_revision\": \"801ada225ddc271c132c3a35f03975671d43e399\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_v8_revision_cp\": \"refs/heads/master@{#43426}\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_webrtc_revision\": \"0f90628433546e61d9268596da93418c623137f4\", @@@",
      "@@@STEP_LOG_LINE@json.output@    \"got_webrtc_revision_cp\": \"refs/heads/master@{#120644}\"@@@",
      "@@@STEP_LOG_LINE@json.output@  }, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"root\": \"src\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"step_text\": \"Some step text\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@got_nacl_revision@\"d998e125e8253980d76e269b7982aeeefc1b9b50\"@@@",
      "@@@SET_BUILD_PROPERTY@got_swarming_client_revision@\"a0ee5d99f1d4b38ddaa4c759c837980b63b99566\"@@@",
      "@@@SET_BUILD_PROPERTY@got_webrtc_revision@\"0f90628433546e61d9268596da93418c623137f4\"@@@",
      "@@@SET_BUILD_PROPERTY@got_revision@\"f27fede2220bcd326aee3e86ddfd4ebd0fe58cb9\"@@@",
      "@@@SET_BUILD_PROPERTY@got_nacl_revision_cp@\"refs/heads/master@{#274981}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_angle_revision@\"fac9503c46405f77757b9a728eb85b8d7bc6080c\"@@@",
      "@@@SET_BUILD_PROPERTY@got_v8_revision@\"801ada225ddc271c132c3a35f03975671d43e399\"@@@",
      "@@@SET_BUILD_PROPERTY@got_v8_revision_cp@\"refs/heads/master@{#43426}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_swarming_client_revision_cp@\"refs/heads/master@{#276089}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_webrtc_revision_cp@\"refs/heads/master@{#120644}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_revision_cp@\"refs/heads/master@{#170242}\"@@@",
      "@@@SET_BUILD_PROPERTY@got_angle_revision_cp@\"refs/heads/master@{#297276}\"@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "runhooks"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "GYP_DEFINES": "component=static_library dont_embed_build_metadata=1 gomadir='[BUILD]/goma' target_arch=ia32 test_isolation_mode=prepare use_goma=1"
    },
    "name": "gclient runhooks"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/compile.py",
      "--target",
      "Release",
      "--src-dir",
      "[SLAVE_BUILD]/src",
      "--build-tool",
      "ninja",
      "--compiler",
      "goma",
      "--goma-jsonstatus",
      "/path/to/tmp/json",
      "--goma-dir",
      "[BUILD]/goma",
      "--clobber",
      "--",
      "chromium_swarm_tests"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "First build",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output (invalid)@null@@@",
      "@@@STEP_LOG_END@json.output (invalid)@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[isolate]/resources/remove_build_metadata.py",
      "--build-dir",
      "[SLAVE_BUILD]/src/out/Release",
      "--src-dir",
      "[SLAVE_BUILD]/src"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "remove_build_metadata",
    "~followup_annotations": [
      "step returned non-zero exit code: 1",
      "@@@STEP_WARNINGS@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport glob\nimport sys\nwith open(sys.argv[1], 'w') as f:\n  f.write('\\n'.join(glob.glob(sys.argv[2])))\n",
      "/path/to/tmp/",
      "[SLAVE_BUILD]/src/out/Release/*.isolated.gen.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "find isolated targets"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[isolate]/resources/isolate.py",
      "[SLAVE_BUILD]/src/tools/swarming_client",
      "batcharchive",
      "--dump-json",
      "/path/to/tmp/json",
      "--isolate-server",
      "https://isolateserver.appspot.com",
      "[SLAVE_BUILD]/src/out/Release/dummy_target_1.isolated.gen.json",
      "[SLAVE_BUILD]/src/out/Release/dummy_target_2.isolated.gen.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "isolate tests",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"dummy_target_1\": \"[dummy hash for dummy_target_1]\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"dummy_target_2\": \"[dummy hash for dummy_target_2]\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@swarm_hashes@{\"dummy_target_1\": \"[dummy hash for dummy_target_1]\", \"dummy_target_2\": \"[dummy hash for dummy_target_2]\"}@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os\nimport shutil\nimport sys\nif os.path.exists(sys.argv[2]):\n  shutil.rmtree(sys.argv[2])\nshutil.move(sys.argv[1], sys.argv[2])",
      "[SLAVE_BUILD]/src/out/Release",
      "[SLAVE_BUILD]/src/out/Release.1"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Move [SLAVE_BUILD]/src/out/Release to [SLAVE_BUILD]/src/out/Release.1",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os@@@",
      "@@@STEP_LOG_LINE@python.inline@import shutil@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(sys.argv[2]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  shutil.rmtree(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.move(sys.argv[1], sys.argv[2])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "[DEPOT_TOOLS]/gclient.py",
      "runhooks"
    ],
    "cwd": "[SLAVE_BUILD]",
    "env": {
      "GYP_DEFINES": "component=static_library dont_embed_build_metadata=1 gomadir='[BUILD]/goma' target_arch=ia32 test_isolation_mode=prepare use_goma=1"
    },
    "name": "gclient runhooks (2)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "[BUILD]/scripts/slave/compile.py",
      "--target",
      "Release",
      "--src-dir",
      "[SLAVE_BUILD]/src",
      "--build-tool",
      "ninja",
      "--compiler",
      "goma",
      "--goma-jsonstatus",
      "/path/to/tmp/json",
      "--goma-dir",
      "[BUILD]/goma",
      "--clobber",
      "--",
      "chromium_swarm_tests"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Second build",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output (invalid)@null@@@",
      "@@@STEP_LOG_END@json.output (invalid)@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[isolate]/resources/remove_build_metadata.py",
      "--build-dir",
      "[SLAVE_BUILD]/src/out/Release",
      "--src-dir",
      "[SLAVE_BUILD]/src"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "remove_build_metadata (2)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport glob\nimport sys\nwith open(sys.argv[1], 'w') as f:\n  f.write('\\n'.join(glob.glob(sys.argv[2])))\n",
      "/path/to/tmp/",
      "[SLAVE_BUILD]/src/out/Release/*.isolated.gen.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "find isolated targets (2)"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[isolate]/resources/isolate.py",
      "[SLAVE_BUILD]/src/tools/swarming_client",
      "batcharchive",
      "--dump-json",
      "/path/to/tmp/json",
      "--isolate-server",
      "https://isolateserver.appspot.com",
      "[SLAVE_BUILD]/src/out/Release/dummy_target_1.isolated.gen.json",
      "[SLAVE_BUILD]/src/out/Release/dummy_target_2.isolated.gen.json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "isolate tests (2)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"dummy_target_1\": \"[dummy hash for dummy_target_1]\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"dummy_target_2\": \"[dummy hash for dummy_target_2]\"@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@SET_BUILD_PROPERTY@swarm_hashes@{\"dummy_target_1\": \"[dummy hash for dummy_target_1]\", \"dummy_target_2\": \"[dummy hash for dummy_target_2]\"}@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport os\nimport shutil\nimport sys\nif os.path.exists(sys.argv[2]):\n  shutil.rmtree(sys.argv[2])\nshutil.move(sys.argv[1], sys.argv[2])",
      "[SLAVE_BUILD]/src/out/Release",
      "[SLAVE_BUILD]/src/out/Release.2"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "Move [SLAVE_BUILD]/src/out/Release to [SLAVE_BUILD]/src/out/Release.2",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import os@@@",
      "@@@STEP_LOG_LINE@python.inline@import shutil@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@if os.path.exists(sys.argv[2]):@@@",
      "@@@STEP_LOG_LINE@python.inline@  shutil.rmtree(sys.argv[2])@@@",
      "@@@STEP_LOG_LINE@python.inline@shutil.move(sys.argv[1], sys.argv[2])@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[isolate]/resources/compare_build_artifacts.py",
      "--first-build-dir",
      "[SLAVE_BUILD]/src/out/Release.1",
      "--second-build-dir",
      "[SLAVE_BUILD]/src/out/Release.2",
      "--target-platform",
      "linux"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "compare_build_artifacts"
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]