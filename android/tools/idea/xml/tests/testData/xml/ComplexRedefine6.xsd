<?xml version="1.0" encoding="UTF-8"?>
<!-- A prototype xsd schema for the pojoserver xml deployer
$Id: bean-deployer_2_0.xsd 76911 2008-08-11 12:42:15Z alesj $
 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
   targetNamespace="urn:jboss:bean-deployer:2.0"
   xmlns="urn:jboss:bean-deployer:2.0"
   elementFormDefault="qualified"
   attributeFormDefault="unqualified"
   version="1.0">

   <xsd:annotation>
      <xsd:documentation>
         <![CDATA[
         The xml deployer schema. The deployment document instance
         root element should reference the schema in the root
         deployment element using something like:

         <deployment xmlns="urn:jboss:bean-deployer:2.0">
         ...
         ]]>
      </xsd:documentation>
   </xsd:annotation>

   <xsd:redefine schemaLocation="ComplexRedefine6_2.xsd">
      <xsd:complexType name="beanType">
         <xsd:complexContent>
            <xsd:extension base="beanType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="classloaderType">
         <xsd:complexContent>
            <xsd:extension base="classloaderType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="abstractBeanfactoryType">
         <xsd:complexContent>
            <xsd:extension base="abstractBeanfactoryType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="beanfactoryType">
         <xsd:complexContent>
            <xsd:extension base="beanfactoryType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="lazyType">
         <xsd:complexContent>
            <xsd:extension base="lazyType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="constructorType">
         <xsd:complexContent>
            <xsd:extension base="constructorType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="lifecycleType">
         <xsd:complexContent>
            <xsd:extension base="lifecycleType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="installType">
         <xsd:complexContent>
            <xsd:extension base="installType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="uninstallCallbackType">
         <xsd:complexContent>
            <xsd:extension base="uninstallCallbackType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="installCallbackType">
         <xsd:complexContent>
            <xsd:extension base="installCallbackType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="dependencyType">
         <xsd:complexContent>
            <xsd:extension base="dependencyType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="injectionType">
         <xsd:complexContent>
            <xsd:extension base="injectionType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="searchType">
         <xsd:complexContent>
            <xsd:extension base="searchType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="valueFactoryType">
         <xsd:complexContent>
            <xsd:extension base="valueFactoryType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="factoryType">
         <xsd:complexContent>
            <xsd:extension base="factoryType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="aliasType">
         <xsd:complexContent>
            <xsd:extension base="aliasType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="namedAliasType">
         <xsd:complexContent>
            <xsd:extension base="namedAliasType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="parameterType">
         <xsd:complexContent>
            <xsd:extension base="parameterType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="propertyType">
         <xsd:complexContent>
            <xsd:extension base="propertyType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="relatedClassType">
         <xsd:complexContent>
            <xsd:extension base="relatedClassType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="annotationType">
         <xsd:complexContent>
            <xsd:extension base="annotationType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="interfaceType">
         <xsd:complexContent>
            <xsd:extension base="interfaceType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:simpleType name="classNameType">
         <xsd:restriction base="classNameType"/>
      </xsd:simpleType>
      <xsd:complexType name="plainValueType">
         <xsd:complexContent>
            <xsd:extension base="plainValueType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="valueType">
         <xsd:complexContent>
            <xsd:extension base="valueType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="classLoaderValueType">
         <xsd:complexContent>
            <xsd:extension base="classLoaderValueType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="annotatedValueType">
         <xsd:complexContent>
            <xsd:extension base="annotatedValueType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="namedValueType">
         <xsd:complexContent>
            <xsd:extension base="namedValueType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="baseCollectionType">
         <xsd:complexContent>
            <xsd:extension base="baseCollectionType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="collectionType">
         <xsd:complexContent>
            <xsd:extension base="collectionType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="listType">
         <xsd:complexContent>
            <xsd:extension base="listType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="setType">
         <xsd:complexContent>
            <xsd:extension base="setType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="arrayType">
         <xsd:complexContent>
            <xsd:extension base="arrayType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="mapType">
         <xsd:complexContent>
            <xsd:extension base="mapType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="entryType">
         <xsd:complexContent>
            <xsd:extension base="entryType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="dependsType">
         <xsd:complexContent>
            <xsd:extension base="dependsType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="demandType">
         <xsd:complexContent>
            <xsd:extension base="demandType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="supplyType">
         <xsd:complexContent>
            <xsd:extension base="supplyType"/>
         </xsd:complexContent>
      </xsd:complexType>
      <xsd:simpleType name="controllerStateType">
         <xsd:restriction base="controllerStateType"/>
      </xsd:simpleType>
      <xsd:simpleType name="controllerModeType">
         <xsd:restriction base="controllerModeType"/>
      </xsd:simpleType>
      <xsd:simpleType name="autowireTypeType">
         <xsd:restriction base="autowireTypeType"/>
      </xsd:simpleType>
      <xsd:simpleType name="accessModeType">
         <xsd:restriction base="accessModeType"/>
      </xsd:simpleType>
      <xsd:simpleType name="optionType">
         <xsd:restriction base="optionType"/>
      </xsd:simpleType>
      <xsd:simpleType name="contextType">
         <xsd:restriction base="contextType"/>
      </xsd:simpleType>
   </xsd:redefine>

   <xsd:element name="deployment" type="deploymentType">
      <xsd:annotation>
         <xsd:documentation>
           <![CDATA[
           The root of the xml deployer instance document
           ]]>
         </xsd:documentation>
      </xsd:annotation>
   </xsd:element>

   <xsd:complexType name="deploymentType">
      <xsd:annotation>
         <xsd:documentation>
           <![CDATA[
           The deployment contains a number of beans and bean factories.

           e.g.
           <deployment ...>
              <bean .../>
              <bean .../>
              <beanfactory .../>
           </deployment>
           ]]>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
         <xsd:element name="annotation" type="annotationType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="classloader" type="classloaderType" minOccurs="0"/>
         <xsd:element name="alias" type="namedAliasType" minOccurs="0"/>
         <xsd:element name="create" type="lifecycleType" minOccurs="0"/>
         <xsd:element name="start" type="lifecycleType" minOccurs="0"/>
         <xsd:element name="stop" type="lifecycleType" minOccurs="0"/>
         <xsd:element name="destroy" type="lifecycleType" minOccurs="0"/>
         <xsd:element name="bean" type="beanType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="beanfactory" type="beanfactoryType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:element name="lazy" type="lazyType" minOccurs="0" maxOccurs="unbounded"/>
         <xsd:any namespace="##other" processContents="strict" minOccurs="0">
            <xsd:annotation>
               <xsd:documentation>An extension value</xsd:documentation>
            </xsd:annotation>
         </xsd:any>
      </xsd:choice>
      <xsd:attribute name="name" type="xsd:string" use="optional"/>
      <xsd:attribute name="scoped" type="xsd:boolean" use="optional"/>
      <xsd:attribute name="mode" type="controllerModeType" use="optional"/>
   </xsd:complexType>

   <!--
     WARN:
     Do not use this in the bean deployer, it won't work!
     FIXME:
     The correct way to do this is to have two separate
     schemas (one for deployments the other for beans)
     then use schema imports.
   -->
   <xsd:element name="bean" type="beanType"/>

   <!--
     WARN:
     Do not use this in the bean deployer, it won't work!
     FIXME:
     The correct way to do this is to have two separate
     schemas (one for deployments the other for beans)
     then use schema imports.
   -->
   <xsd:element name="beanfactory" type="beanfactoryType"/>

   <!--
     WARN:
     Do not use this in the bean deployer, it won't work!
     FIXME:
     The correct way to do this is to have two separate
     schemas (one for deployments the other for beans)
     then use schema imports.
   -->
   <xsd:element name="lazy" type="lazyType"/>

</xsd:schema>
