<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xsd:include schemaLocation="common-2003-09.xsd"/>
  <xsd:simpleType name="SectionState">
    <xsd:annotation>
      <xsd:documentation>Specifies the current state of the section - it could be either collapsed or expanded. At present mainly
               used by filter specific section.
            </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="collapsed"/>
      <xsd:enumeration value="expanded"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="LookupMode">
    <xsd:annotation>
      <xsd:documentation>
        The mode to filter on.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="item_only"/>
      <xsd:enumeration value="item_and_descendents"/>
      <xsd:enumeration value="item_and_ancestors"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="AvailUnitType">
    <xsd:annotation>
      <xsd:documentation>
        For the availablity browse value, the type of units.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="percent"/>
      <xsd:enumeration value="hour"/>
      <xsd:enumeration value="day"/>
      <xsd:enumeration value="fte"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="DataServiceType">
    <xsd:annotation>
      <xsd:documentation>Defines an optional DataService for a view</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="type" use="required">
      <xsd:annotation>
        <xsd:documentation>
               Specifies the type of data service for the view. Data services can be java classes or XBL files. In each case
               the name must be fully qualified: classes prefixed by package, XBL files prefixed with component.
            </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="java"/>
          <xsd:enumeration value="xbl"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ViewFieldDescriptorType">
    <xsd:annotation>
      <xsd:documentation>
            An attribute that is displayed on a form. The attribute may map to a field in a database or it may be a calculated field.
            The attribute contains the rendering information about the field including its name, type, special instructions to help the
            user fill out the field, formatting information, and column location.
         </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nls" type="NlsType" maxOccurs="unbounded"/>
      <xsd:element name="instruction" type="NlsType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="toolTip" type="NlsType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="select" type="SelectType" minOccurs="0"/>
      <xsd:element name="link" type="ViewLinkType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="image" type="ImageType" minOccurs="0"/>
      <xsd:element name="param" type="ParamType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="defaultValue" type="DefaultValueType" minOccurs="0"/>
      <xsd:element name="obsBrowseValue" type="ObsBrowseValueType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="skillBrowseValue" type="SkillBrowseValueType" minOccurs="0"/>
      <xsd:element name="availBrowseValue" type="AvailBrowseValueType" minOccurs="0"/>
      <xsd:element name="timeBrowseValue" type="TimeBrowseValueType" minOccurs="0"/>
      <xsd:element name="description" type="NlsType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Used to hold display mapping description text for property pages.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="attributeCode" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
               The internal name of the attribute. Must match the name of the attribute in the corresponding data document fragment to associate a value with
               the attribute on the form.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="id" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
               The id of this field in the database. Used by the admin pages to get and save individual fields.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="labelPkId" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
               The label_pk_id of this field in the database. Used by the admin pages to get and save individual fields.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="widgetType" type="WidgetType" use="required">
      <xsd:annotation>
        <xsd:documentation>
               The type of the attribute. Different types use different controls during rendering.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="required" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
               Determines whether the form displays the required icon next to the attribute. Used to show visual cues to the
               user that the attribute value must be provided upon submission.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="presenceRequired" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
               Determines whether the attribute must be present on all forms.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="width" type="xsd:integer">
      <xsd:annotation>
        <xsd:documentation>
               Specifies how long to make the control. This does not limit the amount of data that can be entered in the
               control, just how big to make the control on the form. Limitations on the amount of data are taken from the
               data document fragment.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="unique" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
               Determines whether the form displays the unique icon next to the attribute. Used to show visual cues to the
               user that the attribute value must be unique upon submission.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="virtual" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
               Specifies whether the attribute resides in the database or not. If set to true the attribute is a calculated
               field.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="hidden" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
               Specifies that the attribute is hidden. Causes the attribute to be rendered with the "hidden" attribute.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="midnightDate" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
               Specifies whether the field (a date field) should be treated as a finish date for the purpose of rolling back the day
               precision to the previous day when calculating durations.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="readOnly" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
               Specifies that the attribute is read only and that the control should be rendered disabled on the form.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="locked" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
          Specifies that the attribute is currently locked for editing for some reason. Most likely because a running process has locked it for a given instance.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="enterOnce" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
               Determines whether the form displays the enter once icon next to the attribute. Used to show visual cues to the
               user that the attribute value must be entered only once upon submission.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="extType">
      <xsd:annotation>
        <xsd:documentation>
               Allows for more granular specification of a type as well as providing formatting hints. An attribute of widgetType="datepicker" may
               have an extType of timestamp to indicate the value should be formatted with time precision. Also, an attribute of widgetType="numeric"
               may have an extType="percent" to indicate the value should be formatted as a percent.
            </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="enum"/>
          <xsd:enumeration value="timestamp"/>
          <xsd:enumeration value="money"/>
          <xsd:enumeration value="percent"/>
          <xsd:enumeration value="boolean"/>
          <xsd:enumeration value="double"/>
          <xsd:enumeration value="skill_browse"/>
          <xsd:enumeration value="avail_browse"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="decimals" type="xsd:integer">
      <xsd:annotation>
        <xsd:documentation>
               Used for formatting doubles, percent, money fields. Specifies the number of decimal places to render.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="dataSize" type="xsd:integer">
      <xsd:annotation>
        <xsd:documentation>
              The size of the database field to limit the amount of input a user can enter.
           </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="maxValue" type="xsd:string" use="optional"/>
    <xsd:attribute name="minValue" type="xsd:string" use="optional"/>
    <xsd:attribute name="numRows" type="xsd:integer" use="optional"/>
    <xsd:attribute name="numCols" type="xsd:integer" use="optional"/>
    <xsd:attribute name="lookupType" type="xsd:string" use="optional"/>
    <xsd:attribute name="multiValued" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="currencyAttribute" type="xsd:string" use="optional"/>
    <xsd:attribute name="currencyConnected" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="fixedWidget" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>
                     Specifies if the widget type of this attribute is fixed, ie not even the administrator
                     can change it.  Its intended for use within the DefaultDisplayType element, and may have
                     no effect inside a section element.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="extendedWidgetType" type="ExtendedWidgetType" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Specifies additional information to aid in rendering. Used primarily for display mappings
          to indicate if an attribute is to rendered as a text, text + icon, or text + icon + description or text + description.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="dependentEntry" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
               If the lookup is a dependent lookup, then this is the lookup type that the browse can not go above.  For example when
               there is Country/State/City, if the dependentEntry was Country, then the browse would look over all the whole tree.

            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="dependentExit" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
               If the lookup is a dependent lookup, then this is the lookup type that is returned  For example when
               there is Country/State/City, if the dependentExit was Country, then the browse would return a City.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="dependentParentLookup" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
              If the lookup is a dependent lookup, then this is the optional parent node that is allowed to be searched over.  So in the
              dependentEntry example below if you set the dependentParentLookup to USA you would only search over USA states
              and cities.  NOTE:  The dependentParentLookup must be a parent lookup of the dependentEntry.  So, you could not pick
              USA as the parentLookup and Country as the entry.  The entry must be state for USA.
           </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="xpathExpression" type="xsd:string" use="optional"/>
    <xsd:attribute name="notEqualXPath" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
               Used with the xpath expression.  If this is set to true, then the query will build a not equals expression
               against the value found in the xpath expression.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="aggregate" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
           Used for NSQL parameters only.  This is when parameters are part of the @HAVING_FILTER@ NSQL
           construct.  When the NSQL is converted to an object and a attribute is part of the HAVING_FILTER
           then this flag is true.  This flag is used by the expression builder which will ignore these
           types of attributes.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="forceLocalize" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Used by developers to tell the view loaders that a virtual custom field defined
          in the cview is subject to localization processing. This is not stored in the database
          and is not subject to XOG.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="showValue" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>
          Used by to determine whether to show the value for a formula field or not. Customizable
          in the admin UI using the Value checkbox.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="modeEnabledLookup" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Used by to determine whether to show the lookupmode pulldown for filter panes.  This attribute
          is populated from the lookup, so it is virtual.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="active" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>
          From the object attribute.  If the attribute is active or not.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="isMVLookup" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Used by to determine whether to attribute is stored as a multi-valued lookup or not.  The isMultiValued above
          determines if the Select Widget can handle multiple options, but it does not differentiate between a object attribute
          types Lookup and MVLookup.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ViewColumnType">
    <xsd:annotation>
      <xsd:documentation>
         A property or filter view is broken up by columns or sections. The attributes are placed in a column
         by their column number stored with the view attribute in the database.
       </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="viewFieldDescriptor" type="ViewFieldDescriptorType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The order of the column in the section or view. Used during XOG to set the COLUMN field in ODF_VIEW_ATTRIUBTES.
          If absent the order of the column elements in the XML document determines the sequence.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="DefaultDisplayType">
    <xsd:annotation>
      <xsd:documentation>
         For the object this is the set of attributes for which the display type overrides the default.
         This would be used in a list view, where there is a numeric attribute and it is to be displayed
         as a stoplight.
       </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="viewFieldDescriptor" type="ViewFieldDescriptorType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The order of the column in the section or view. Used during XOG to set the COLUMN field in ODF_VIEW_ATTRIUBTES.
          If absent the order of the column elements in the XML document determines the sequence.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ViewSectionType">
    <xsd:annotation>
      <xsd:documentation>
            Specifies the section for the property view. A property view can be broken into sections, e.g., the General, Management, Financial, Opportunity, and Custom
            sections for the project properties. Each section can have a list of attributes associated with it.
         </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="column" type="ViewColumnType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="nls" type="NlsType" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
             Specifies the name of the section for display purposes.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="sequence" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
               The order the section displays on the page. Sections can be re-ordered in the administration UI.
               Used by XOGs to set the DISPLAY_ORDER in the ODF_VIEW_SECTIONS table. If absent the order of the
               section elements in the XML document determines the sequence.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="collapsed" type="xsd:boolean" use="optional" default="true"/>
    <xsd:attribute name="filterByExpression" type="xsd:boolean" use="optional" default="true"/>
    <xsd:attribute name="currentState" type="SectionState" use="optional" default="collapsed"/>
    <xsd:attribute name="id" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
               The id of this section in the database. Used by the admin pages to get and save individual sections.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="PropertyViewType">
    <xsd:annotation>
      <xsd:documentation>
            The root element of an odf property view document fragment. The odf property view document describes the layout of
            a property view of an odf object or odf property view that spans multiple odf objects.
         </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="column" type="ViewColumnType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="section" type="ViewSectionType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="nls" type="NlsType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="defaultDisplay" type="DefaultDisplayType" minOccurs="0"/>
      <xsd:element name="expression" type="ExpressionType" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:integer">
      <xsd:annotation>
        <xsd:documentation>
                  The id of this view. This is used to save this view in the database.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="code" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
                  The name of this view. This is used to identify this view for administration purposes.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="type" use="required">
      <xsd:annotation>
        <xsd:documentation>
                    The type of this view. Property views can be of type:
                        default (used as both an update and a create property page or default filter)
                        update  (specialized update view)
                        create  (specialized create view)
                </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="default"/>
          <xsd:enumeration value="update"/>
          <xsd:enumeration value="create"/>
          <xsd:enumeration value="filter"/>
          <xsd:enumeration value="fieldList"/>
          <xsd:enumeration value="master"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="objectCode" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
                    The associated object for this view. It is optional because it applies only to the simple case where the
                    view can be associated with a single object, i.e., properties for Project. In a more complex case where
                    the view may be associated with multiple objects a data service would be used to provide the object meta-data
                    and this attribute would not be used.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="sequence" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The order of the view. For update properties pages this determines the order
          of the sub pages.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="componentId" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The component this view belongs to. Used by the administration pages to find objects, etc.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="partitionCode" type="xsd:string" default="NIKU.ROOT">
      <xsd:annotation>
        <xsd:documentation>
          The partition this view is for.  The partition model of the object is used to determine
          the unique partition.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="isSystem" type="xsd:boolean" default="true">
      <xsd:annotation>
        <xsd:documentation>
          Indicates whether this view is a seeded (system) view.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="isCustomized" type="xsd:boolean" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Indicates whether this view is customized.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="readOnly" type="xsd:boolean" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Indicates whether this view is read only.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="linkCode" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The link code that corresponds to this subpage, only used for update pages.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="isSecure" type="xsd:boolean" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Indicates whether this view is subject to security NAVIGATE and EDIT
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="SelectType">
    <xsd:annotation>
      <xsd:documentation>
            Groups the options displayed in a selection drop down for a widgetType="select" attribute.
         </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:annotation>
        <xsd:documentation>
          List of options to display in the selection drop down.
        </xsd:documentation>
      </xsd:annotation>
      <xsd:element name="option" type="OptionType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="OptionType">
    <xsd:annotation>
      <xsd:documentation>
        Describes the option values displayed in a selection drop down for a widgetType="select" attribute.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="value" type="xsd:string" use="required"/>
    <xsd:attribute name="description" type="xsd:string" use="optional"/>
    <xsd:attribute name="defaultSelection" type="xsd:boolean">
      <xsd:annotation>
        <xsd:documentation>
          Denotes the selection that should show as the default.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ViewLinkType">
    <xsd:annotation>
      <xsd:documentation>
            Specifies the attribute is an html link. Sub-elements of the link represent the parameter names and values for the link.
         </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="param" type="ParamType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="code" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
           Specifies the code of the link. Used by XOG to store the link codes in odf_view_attributes.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="action" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>
               The action invoked when the link is clicked.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="ParamType">
    <xsd:annotation>
      <xsd:documentation>
            Describes the parameter names and values for a link.
         </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="ref" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
               The reference for the parameter - can be an attribute in the object, a static value, or a reference into the document.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="source" use="required">
      <xsd:annotation>
        <xsd:documentation>
               The determines where to get the parameters (can be static, input, or data).
            </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="static"/>
          <xsd:enumeration value="data"/>
          <xsd:enumeration value="input"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="code" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
               The code of the parameter - usually corresponds to the name of the parameter,
               however can be special values of ~target~ or ~actionSuffix~.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="name" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
               The name of the parameter - as used for progress bar, has values like stageName.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="LookupValueType">
    <xsd:annotation>
      <xsd:documentation>Filter value that contains one or more lookup values.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="code" type="xsd:string" use="optional"/>
    <xsd:attribute name="value" type="xsd:string" use="optional"/>
    <xsd:attribute name="lookupType" type="xsd:string" use="optional"/>
    <xsd:attribute name="mode" type="LookupMode" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="FilterValueType">
    <xsd:annotation>
      <xsd:documentation>A filter value that is part of a saved filter set.

If the filter is a display mapping field then it will have a child displayMappingValue element. This will specify the WHERE clause required to execute the query.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="obsBrowseValue" type="ObsBrowseValueType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="skillBrowseValue" type="SkillBrowseValueType" minOccurs="0"/>
      <xsd:element name="availBrowseValue" type="AvailBrowseValueType" minOccurs="0"/>
      <xsd:element name="timeBrowseValue" type="TimeBrowseValueType" minOccurs="0"/>
      <xsd:element name="lookupValue" type="LookupValueType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="displayMappingValue" type="ExpressionType" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:int" use="optional"/>
    <xsd:attribute name="code" type="xsd:string" use="optional"/>
    <xsd:attribute name="value" type="xsd:string" use="optional"/>
    <xsd:attribute name="pmdParamName" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="FilterValueSetType">
    <xsd:annotation>
      <xsd:documentation>A named, saved filter set. </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="filterValue" type="FilterValueType" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>A key-value pair. It gives the value for each attribute in a attribute set.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:int" use="optional"/>
    <xsd:attribute name="userId" type="xsd:string" use="optional"/>
    <xsd:attribute name="default" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
    <xsd:attribute name="description" type="xsd:string" use="optional"/>
    <xsd:attribute name="objectId" type="xsd:int" use="optional"/>
    <xsd:attribute name="objectInstanceId" type="xsd:int" use="optional"/>
    <xsd:attribute name="system" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="sessionId" type="xsd:string" use="optional"/>
    <xsd:attribute name="instanceId" type="xsd:int" use="optional"/>
    <xsd:attribute name="selected" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="hasUserSubmitted" type="xsd:boolean" default="false">
      <xsd:annotation>
        <xsd:documentation>true when a user has submitted a value set, i.e. clicked on the Filter or Show All button</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="objectCode" type="xsd:string" use="optional"/>
    <xsd:attribute name="viewCode" type="xsd:string" use="optional"/>
    <xsd:attribute name="portletInstanceCode" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="FilterViewType">
    <xsd:annotation>
      <xsd:documentation>Definition of a filter view. A filter view can contain zero or one section. It may not have a section - specifically when there are no filter fields are defined then there won't be any section.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="section" type="ViewSectionType" minOccurs="0"/>
      <xsd:element name="filterValueSet" type="FilterValueSetType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="defaultDisplay" type="DefaultDisplayType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="expression" type="ExpressionType" minOccurs="0"/>
      <xsd:element name="subObject" type="SubObjectType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="code" type="xsd:string" use="required"/>
    <xsd:attribute name="objectCode" type="xsd:string" use="optional"/>
    <xsd:attribute name="parentObjectCode" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          If there is an object associated with the view and it has a parent, this is the parent object code.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="componentCode" type="xsd:string" use="optional"/>
    <xsd:attribute name="dataProviderType" type="DataProviderType" use="optional" default="object">
      <xsd:annotation>
        <xsd:documentation>
               Specifies the type of data service for the view. Data services can be either object or system.
            </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="dataProviderId" type="xsd:string" use="optional"/>
    <xsd:attribute name="id" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
                  The id of this view. This is used to save this view in the database.
                </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="obsTableNameKey" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          Gets loaded from the object when the object is obs enabled.  The value of the obsTableNameKey is the
          corresponding value in column TABLE_NAME from the PRJ_OBS_ASSOCIATIONS table.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="partitionCode" type="xsd:string" default="NIKU.ROOT">
      <xsd:annotation>
        <xsd:documentation>
          The partition this view is for.  The partition model of the object is used to determine
          the unique partition.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="isCustomized" type="xsd:boolean" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Indicates if this view has been customized or not.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="DefaultValueType">
    <xsd:annotation>
      <xsd:documentation>Describes the default values for a viewFieldDescriptor.

If it's a obs, time or a multi-select browse field then one can specify default values using the child elements.

For all other simple fields (string,numeric, boolean and date) one will specify values using the value attribute of this element.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="obsBrowseValue" type="ObsBrowseValueType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="skillBrowseValue" type="SkillBrowseValueType" minOccurs="0"/>
      <xsd:element name="availBrowseValue" type="AvailBrowseValueType" minOccurs="0"/>
      <xsd:element name="timeBrowseValue" type="TimeBrowseValueType" minOccurs="0"/>
      <xsd:element name="lookupValue" type="LookupValueType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="document" type="DocumentType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="value" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The default value
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="replace" type="MacroType" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="SkillBrowseValueType">
    <xsd:annotation>
      <xsd:documentation>
        A complex type to represent the value of a Skill browse attribute.
        This specifies the additional information (meta data) required to render
        and register this special type of attribute.
        minimumMatch - The minimum percent of skills that that should be returned for filtering.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="skillValue" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Each skill that is selected
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:attribute name="value" type="xsd:string" use="optional">
            <xsd:annotation>
              <xsd:documentation>
                The complete value that is displayed in the browse box.  This is not stored in the database, but created in the service and returned to the vxsl.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="skillId" type="xsd:long" use="required">
            <xsd:annotation>
              <xsd:documentation>
                The primary key of the skill.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="skillCode" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>
                The skill code of the skill. Used only in XOG.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="weight" type="xsd:long" use="required">
            <xsd:annotation>
              <xsd:documentation>
                The weight of the skill.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="proficiencyLevel" type="xsd:long" use="required">
            <xsd:annotation>
              <xsd:documentation>
                The proficiency of the skill.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="interestLevel" type="xsd:long" use="required">
            <xsd:annotation>
              <xsd:documentation>
                The interest of the skill.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="minimumMatch" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The minimum percent of skills that that should be returned for filtering.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="AvailBrowseValueType">
    <xsd:annotation>
      <xsd:documentation>
        A complex type to represent the value of a availablity browse attribute.
        This specifies the additional information (meta data) required to render
        and register this special type of attribute.
        minimumMatch - The minimum percent of availablity that that should be returned for filtering.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="availValue" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Each Availablity that is selected
          </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:attribute name="value" type="xsd:string" use="optional">
            <xsd:annotation>
              <xsd:documentation>
                The complete value that is displayed in the browse box.  This is not stored in the database, but created in the service and returned to the vxsl.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="unitType" type="AvailUnitType" use="required">
            <xsd:annotation>
              <xsd:documentation>
                The type of availablity needed.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="quantity" type="xsd:double" use="required">
            <xsd:annotation>
              <xsd:documentation>
                The amount availablity needed.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="startDate" type="xsd:date" use="required">
            <xsd:annotation>
              <xsd:documentation>
                The start of the availablity segment.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="endDate" type="xsd:date" use="required">
            <xsd:annotation>
              <xsd:documentation>
                The end of the availablity segment.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="minimumMatch" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The minimum percent of availablity that that should be returned for filtering.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="includeSoftBooking" type="xsd:boolean" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>
          Flag to determine if softbooking segments are okay or not.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="SubObjectType">
    <xsd:attribute name="code" type="xsd:string" use="required"/>
  </xsd:complexType>
</xsd:schema>
