Types:
PsiAssignmentExpression:i += 2 : java.util.concurrent.atomic.AtomicInteger
PsiAssignmentExpression:i -= 5 : java.util.concurrent.atomic.AtomicInteger
PsiBinaryExpression:i + 9 : int
PsiBinaryExpression:i - 9 : int
PsiBinaryExpression:i == 0 : boolean
PsiField:i : java.util.concurrent.atomic.AtomicInteger
PsiReferenceExpression:i : java.util.concurrent.atomic.AtomicInteger
PsiReferenceExpression:i : java.util.concurrent.atomic.AtomicInteger
PsiReferenceExpression:i : java.util.concurrent.atomic.AtomicInteger
PsiReferenceExpression:i : java.util.concurrent.atomic.AtomicInteger
PsiReferenceExpression:i : java.util.concurrent.atomic.AtomicInteger
PsiReferenceExpression:i : java.util.concurrent.atomic.AtomicInteger

Conversions:
0 -> new java.util.concurrent.atomic.AtomicInteger($val$) $val$
9 -> $qualifier$.set($val$) $qualifier$ = $val$ i = 9
i + 9 -> $qualifier$.get() + $val$ $qualifier$+$val$
i += 2 -> $qualifier$.getAndAdd(($val$)) $qualifier$ += $val$
i - 9 -> $qualifier$.get() - $val$ $qualifier$-$val$
i -= 5 -> $qualifier$.getAndAdd(-($val$)) $qualifier$ -= $val$
i == 0 -> $qualifier$.get() == $val$ $qualifier$==$val$

New expression type changes:
Fails:
