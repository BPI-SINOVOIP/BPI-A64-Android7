PsiJavaFile:For.java
  PsiImportList
    <empty list>
  PsiClass:Test
    PsiModifierList:
      <empty list>
    PsiKeyword:class('class')
    PsiWhiteSpace(' ')
    PsiIdentifier:Test('Test')
    PsiTypeParameterList
      <empty list>
    PsiReferenceList
      <empty list>
    PsiReferenceList
      <empty list>
    PsiWhiteSpace(' ')
    PsiJavaToken:LBRACE('{')
    PsiWhiteSpace('\n    ')
    PsiMethod:method
      PsiModifierList:
        <empty list>
      PsiTypeParameterList
        <empty list>
      PsiTypeElement:void
        PsiKeyword:void('void')
      PsiWhiteSpace(' ')
      PsiIdentifier:method('method')
      PsiParameterList:()
        PsiJavaToken:LPARENTH('(')
        PsiJavaToken:RPARENTH(')')
      PsiReferenceList
        <empty list>
      PsiWhiteSpace(' ')
      PsiCodeBlock
        PsiJavaToken:LBRACE('{')
        PsiWhiteSpace('\n        ')
        PsiForStatement
          PsiKeyword:for('for')
          PsiJavaToken:LPARENTH('(')
          PsiDeclarationStatement
            PsiLocalVariable:it
              PsiModifierList:
                <empty list>
              PsiTypeElement:Iterator<String>
                PsiJavaCodeReferenceElement:Iterator<String>
                  PsiIdentifier:Iterator('Iterator')
                  PsiReferenceParameterList
                    PsiJavaToken:LT('<')
                    PsiTypeElement:String
                      PsiJavaCodeReferenceElement:String
                        PsiIdentifier:String('String')
                        PsiReferenceParameterList
                          <empty list>
                    PsiJavaToken:GT('>')
              PsiWhiteSpace(' ')
              PsiIdentifier:it('it')
              PsiWhiteSpace(' ')
              PsiJavaToken:EQ('=')
              PsiWhiteSpace(' ')
              PsiLiteralExpression:null
                PsiJavaToken:NULL_KEYWORD('null')
              PsiJavaToken:SEMICOLON(';')
          PsiWhiteSpace(' ')
          PsiMethodCallExpression:it.hasNext()
            PsiReferenceExpression:it.hasNext
              PsiReferenceExpression:it
                PsiReferenceParameterList
                  <empty list>
                PsiIdentifier:it('it')
              PsiJavaToken:DOT('.')
              PsiReferenceParameterList
                <empty list>
              PsiIdentifier:hasNext('hasNext')
            PsiExpressionList
              PsiJavaToken:LPARENTH('(')
              PsiJavaToken:RPARENTH(')')
          PsiJavaToken:SEMICOLON(';')
          PsiJavaToken:RPARENTH(')')
          PsiWhiteSpace(' ')
          PsiBlockStatement
            PsiCodeBlock
              PsiJavaToken:LBRACE('{')
              PsiWhiteSpace('\n            ')
              PsiDeclarationStatement
                PsiLocalVariable:s
                  PsiModifierList:
                    <empty list>
                  PsiTypeElement:String
                    PsiJavaCodeReferenceElement:String
                      PsiIdentifier:String('String')
                      PsiReferenceParameterList
                        <empty list>
                  PsiWhiteSpace(' ')
                  PsiIdentifier:s('s')
                  PsiWhiteSpace(' ')
                  PsiJavaToken:EQ('=')
                  PsiWhiteSpace(' ')
                  PsiMethodCallExpression:it.next()
                    PsiReferenceExpression:it.next
                      PsiReferenceExpression:it
                        PsiReferenceParameterList
                          <empty list>
                        PsiIdentifier:it('it')
                      PsiJavaToken:DOT('.')
                      PsiReferenceParameterList
                        <empty list>
                      PsiIdentifier:next('next')
                    PsiExpressionList
                      PsiJavaToken:LPARENTH('(')
                      PsiJavaToken:RPARENTH(')')
                  PsiJavaToken:SEMICOLON(';')
              PsiWhiteSpace('\n        ')
              PsiJavaToken:RBRACE('}')
        PsiWhiteSpace('\n    ')
        PsiJavaToken:RBRACE('}')
    PsiWhiteSpace('\n')
    PsiJavaToken:RBRACE('}')