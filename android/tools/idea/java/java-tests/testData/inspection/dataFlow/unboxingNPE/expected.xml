<?xml version="1.0" encoding="UTF-8"?>
<problems>
<problem>
  <file>Test.java</file>
  <line>95</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>91</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>31</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>87</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>14</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>75</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>83</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>45</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>67</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>71</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>8</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>79</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>22</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>50</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>56</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>26</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>99</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>35</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>40</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>61</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>



<problem>
  <file>Test.java</file>
  <line>18</line>
  <method>
    <name>int f(int k)</name>
    <display_name>f(int)</display_name>
    <package>&lt;default&gt;</package>
    <class>
      <name>Auto</name>
      <display_name>Auto</display_name>
    </class>
  </method>
  <problem_class>Constant conditions &amp; exceptions</problem_class>
  <description>Unboxing of &lt;code&gt;i&lt;/code&gt; may produce &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;.</description>
</problem>

  <problem>
    <file>Test.java</file>
    <line>67</line>
    <package>&lt;default&gt;</package>
    <problem_class severity="WARNING" attribute_key="WARNING_ATTRIBUTES">Constant conditions &amp; exceptions</problem_class>
    <description>Condition &lt;code&gt;i&lt;/code&gt; is always &lt;code&gt;true&lt;/code&gt; when reached</description>
  </problem>

</problems>
