<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="java.util.AbstractCollection T[] toArray(T[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ArrayList ArrayList(java.util.Collection&lt;? extends E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ArrayList java.util.Iterator&lt;E&gt; iterator()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ArrayList java.util.ListIterator&lt;E&gt; listIterator()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ArrayList java.util.ListIterator&lt;E&gt; listIterator(int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays T[] copyOf(T[], int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays T[] copyOf(T[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays T[] copyOf(U[], int, java.lang.Class&lt;? extends T[]&gt;)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays T[] copyOf(U[], int, java.lang.Class&lt;? extends T[]&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays T[] copyOf(U[], int, java.lang.Class&lt;? extends T[]&gt;) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays T[] copyOfRange(T[], int, int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays T[] copyOfRange(T[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays T[] copyOfRange(U[], int, int, java.lang.Class&lt;? extends T[]&gt;)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays T[] copyOfRange(U[], int, int, java.lang.Class&lt;? extends T[]&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays T[] copyOfRange(U[], int, int, java.lang.Class&lt;? extends T[]&gt;) 3">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays boolean[] copyOf(boolean[], int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays boolean[] copyOf(boolean[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays boolean[] copyOfRange(boolean[], int, int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays boolean[] copyOfRange(boolean[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays byte[] copyOf(byte[], int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays byte[] copyOf(byte[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays byte[] copyOfRange(byte[], int, int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays byte[] copyOfRange(byte[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays char[] copyOf(char[], int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays char[] copyOf(char[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays char[] copyOfRange(char[], int, int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays char[] copyOfRange(char[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays double[] copyOf(double[], int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays double[] copyOf(double[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays double[] copyOfRange(double[], int, int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays double[] copyOfRange(double[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays float[] copyOf(float[], int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays float[] copyOf(float[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays float[] copyOfRange(float[], int, int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays float[] copyOfRange(float[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(T[], T, java.util.Comparator&lt;? super T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(T[], int, int, T, java.util.Comparator&lt;? super T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(byte[], byte) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(byte[], int, int, byte) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(char[], char) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(char[], int, int, char) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(double[], double) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(double[], int, int, double) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(float[], float) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(float[], int, int, float) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(int[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(int[], int, int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(java.lang.Object[], int, int, java.lang.Object) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(java.lang.Object[], java.lang.Object) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(long[], int, int, long) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(long[], long) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(short[], int, int, short) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int binarySearch(short[], short) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int[] copyOf(int[], int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int[] copyOf(int[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int[] copyOfRange(int[], int, int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays int[] copyOfRange(int[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.lang.String deepToString(java.lang.Object[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.lang.String toString(boolean[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.lang.String toString(byte[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.lang.String toString(char[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.lang.String toString(double[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.lang.String toString(float[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.lang.String toString(int[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.lang.String toString(java.lang.Object[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.lang.String toString(long[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.lang.String toString(short[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.util.List&lt;T&gt; asList(T...)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays java.util.List&lt;T&gt; asList(T...) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays long[] copyOf(long[], int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays long[] copyOf(long[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays long[] copyOfRange(long[], int, int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays long[] copyOfRange(long[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays short[] copyOf(short[], int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays short[] copyOf(short[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays short[] copyOfRange(short[], int, int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays short[] copyOfRange(short[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(boolean[], boolean) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(boolean[], int, int, boolean) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(byte[], byte) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(byte[], int, int, byte) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(char[], char) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(char[], int, int, char) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(double[], double) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(double[], int, int, double) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(float[], float) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(float[], int, int, float) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(int[], int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(int[], int, int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(java.lang.Object[], int, int, java.lang.Object) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(java.lang.Object[], java.lang.Object) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(long[], int, int, long) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(long[], long) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(short[], int, int, short) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void fill(short[], short) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(T[], int, int, java.util.Comparator&lt;? super T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(T[], java.util.Comparator&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(byte[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(byte[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(char[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(char[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(double[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(double[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(float[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(float[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(int[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(int[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(java.lang.Object[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(java.lang.Object[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(long[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(long[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(short[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Arrays void sort(short[], int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Calendar boolean isSet(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar int get(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar int getActualMaximum(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar int getActualMinimum(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar int getFirstDayOfWeek()">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.SUNDAY, java.util.Calendar.MONDAY, java.util.Calendar.TUESDAY, java.util.Calendar.WEDNESDAY, java.util.Calendar.THURSDAY, java.util.Calendar.FRIDAY, java.util.Calendar.SATURDAY}" />
    </annotation>
  </item>
  <item name="java.util.Calendar int getGreatestMinimum(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar int getLeastMaximum(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar int getMaximum(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar int getMinimum(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar java.lang.String getDisplayName(int, int, java.util.Locale) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar java.lang.String getDisplayName(int, int, java.util.Locale) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.SHORT, java.util.Calendar.LONG}" />
    </annotation>
  </item>
  <item name="java.util.Calendar java.util.Map&lt;java.lang.String,java.lang.Integer&gt; getDisplayNames(int, int, java.util.Locale) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar java.util.Map&lt;java.lang.String,java.lang.Integer&gt; getDisplayNames(int, int, java.util.Locale) 1">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.SHORT, java.util.Calendar.LONG, java.util.Calendar.ALL_STYLES}" />
    </annotation>
  </item>
  <item name="java.util.Calendar void add(int, int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar void clear(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar void roll(int, boolean) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar void roll(int, int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar void set(int, int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.ERA, java.util.Calendar.YEAR, java.util.Calendar.MONTH, java.util.Calendar.WEEK_OF_YEAR, java.util.Calendar.WEEK_OF_MONTH, java.util.Calendar.DATE, java.util.Calendar.DAY_OF_MONTH, java.util.Calendar.DAY_OF_YEAR, java.util.Calendar.DAY_OF_WEEK, java.util.Calendar.DAY_OF_WEEK_IN_MONTH, java.util.Calendar.AM_PM, java.util.Calendar.HOUR, java.util.Calendar.HOUR_OF_DAY, java.util.Calendar.MINUTE, java.util.Calendar.SECOND, java.util.Calendar.MILLISECOND, java.util.Calendar.ZONE_OFFSET, java.util.Calendar.DST_OFFSET}" />
    </annotation>
  </item>
  <item name="java.util.Calendar void setFirstDayOfWeek(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{java.util.Calendar.SUNDAY, java.util.Calendar.MONDAY, java.util.Calendar.TUESDAY, java.util.Calendar.WEDNESDAY, java.util.Calendar.THURSDAY, java.util.Calendar.FRIDAY, java.util.Calendar.SATURDAY}" />
    </annotation>
  </item>
  <item name="java.util.Collection T[] toArray(T[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collection T[] toArray(T[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collection boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collection boolean containsAll(java.util.Collection&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collection boolean removeAll(java.util.Collection&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collection boolean retainAll(java.util.Collection&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collection java.lang.Object[] toArray()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collection java.util.Iterator&lt;E&gt; iterator()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections T max(java.util.Collection&lt;? extends T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections T max(java.util.Collection&lt;? extends T&gt;, java.util.Comparator&lt;? super T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections T min(java.util.Collection&lt;? extends T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections T min(java.util.Collection&lt;? extends T&gt;, java.util.Comparator&lt;? super T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections boolean addAll(java.util.Collection&lt;? super T&gt;, T...) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections boolean addAll(java.util.Collection&lt;? super T&gt;, T...) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections boolean disjoint(java.util.Collection&lt;?&gt;, java.util.Collection&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections boolean disjoint(java.util.Collection&lt;?&gt;, java.util.Collection&lt;?&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections boolean replaceAll(java.util.List&lt;T&gt;, T, T) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections int binarySearch(java.util.List&lt;? extends T&gt;, T, java.util.Comparator&lt;? super T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections int binarySearch(java.util.List&lt;? extends java.lang.Comparable&lt;? super T&gt;&gt;, T) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections int frequency(java.util.Collection&lt;?&gt;, java.lang.Object) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections int indexOfSubList(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections int indexOfSubList(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections int lastIndexOfSubList(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections int lastIndexOfSubList(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.ArrayList&lt;T&gt; list(java.util.Enumeration&lt;T&gt;)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.ArrayList&lt;T&gt; list(java.util.Enumeration&lt;T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Collection&lt;E&gt; checkedCollection(java.util.Collection&lt;E&gt;, java.lang.Class&lt;E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Collection&lt;E&gt; checkedCollection(java.util.Collection&lt;E&gt;, java.lang.Class&lt;E&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Collection&lt;T&gt; synchronizedCollection(java.util.Collection&lt;T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Collection&lt;T&gt; unmodifiableCollection(java.util.Collection&lt;? extends T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Comparator&lt;T&gt; reverseOrder()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Comparator&lt;T&gt; reverseOrder(java.util.Comparator&lt;T&gt;)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Enumeration&lt;T&gt; emptyEnumeration()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Enumeration&lt;T&gt; enumeration(java.util.Collection&lt;T&gt;)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Enumeration&lt;T&gt; enumeration(java.util.Collection&lt;T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Iterator&lt;T&gt; emptyIterator()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.List&lt;E&gt; checkedList(java.util.List&lt;E&gt;, java.lang.Class&lt;E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.List&lt;E&gt; checkedList(java.util.List&lt;E&gt;, java.lang.Class&lt;E&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.List&lt;T&gt; emptyList()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.List&lt;T&gt; nCopies(int, T)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.List&lt;T&gt; synchronizedList(java.util.List&lt;T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.List&lt;T&gt; unmodifiableList(java.util.List&lt;? extends T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.ListIterator&lt;T&gt; emptyListIterator()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Map&lt;K,V&gt; checkedMap(java.util.Map&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Map&lt;K,V&gt; checkedMap(java.util.Map&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Map&lt;K,V&gt; checkedMap(java.util.Map&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Map&lt;K,V&gt; emptyMap()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Map&lt;K,V&gt; singletonMap(K, V)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Map&lt;K,V&gt; synchronizedMap(java.util.Map&lt;K,V&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Map&lt;K,V&gt; unmodifiableMap(java.util.Map&lt;? extends K,? extends V&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Queue&lt;T&gt; asLifoQueue(java.util.Deque&lt;T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Set&lt;E&gt; checkedSet(java.util.Set&lt;E&gt;, java.lang.Class&lt;E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Set&lt;E&gt; checkedSet(java.util.Set&lt;E&gt;, java.lang.Class&lt;E&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Set&lt;E&gt; newSetFromMap(java.util.Map&lt;E,java.lang.Boolean&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Set&lt;T&gt; emptySet()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Set&lt;T&gt; synchronizedSet(java.util.Set&lt;T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.Set&lt;T&gt; unmodifiableSet(java.util.Set&lt;? extends T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; checkedSortedMap(java.util.SortedMap&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; checkedSortedMap(java.util.SortedMap&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; checkedSortedMap(java.util.SortedMap&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; synchronizedSortedMap(java.util.SortedMap&lt;K,V&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; unmodifiableSortedMap(java.util.SortedMap&lt;K,? extends V&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.SortedSet&lt;E&gt; checkedSortedSet(java.util.SortedSet&lt;E&gt;, java.lang.Class&lt;E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.SortedSet&lt;E&gt; checkedSortedSet(java.util.SortedSet&lt;E&gt;, java.lang.Class&lt;E&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.SortedSet&lt;T&gt; synchronizedSortedSet(java.util.SortedSet&lt;T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections java.util.SortedSet&lt;T&gt; unmodifiableSortedSet(java.util.SortedSet&lt;T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void copy(java.util.List&lt;? super T&gt;, java.util.List&lt;? extends T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void copy(java.util.List&lt;? super T&gt;, java.util.List&lt;? extends T&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void fill(java.util.List&lt;? super T&gt;, T) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void reverse(java.util.List&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void rotate(java.util.List&lt;?&gt;, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void shuffle(java.util.List&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void shuffle(java.util.List&lt;?&gt;, java.util.Random) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void shuffle(java.util.List&lt;?&gt;, java.util.Random) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void sort(java.util.List&lt;T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void sort(java.util.List&lt;T&gt;, java.util.Comparator&lt;? super T&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Collections void swap(java.util.List&lt;?&gt;, int, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Deque java.util.Iterator&lt;E&gt; descendingIterator()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.File) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.File, java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.File, java.lang.String) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.File, java.lang.String, java.util.Locale) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.File, java.lang.String, java.util.Locale) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.OutputStream) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.OutputStream, java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.OutputStream, java.lang.String) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.OutputStream, java.lang.String, java.util.Locale) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.OutputStream, java.lang.String, java.util.Locale) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.io.PrintStream) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.lang.String, java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.lang.String, java.lang.String) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.lang.String, java.lang.String, java.util.Locale) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter Formatter(java.lang.String, java.lang.String, java.util.Locale) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter java.util.Formatter format(java.lang.String, java.lang.Object...) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Formatter java.util.Formatter format(java.util.Locale, java.lang.String, java.lang.Object...) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.HashSet HashSet(java.util.Collection&lt;? extends E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.LinkedHashSet LinkedHashSet(java.util.Collection&lt;? extends E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.LinkedList LinkedList(java.util.Collection&lt;? extends E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List ListIterator&lt;E&gt; listIterator()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List T[] toArray(T[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List T[] toArray(T[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List boolean addAll(int, java.util.Collection&lt;? extends E&gt;) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List boolean containsAll(java.util.Collection&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List boolean removeAll(java.util.Collection&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List boolean retainAll(java.util.Collection&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List java.lang.Object[] toArray()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List java.util.Iterator&lt;E&gt; iterator()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List java.util.List&lt;E&gt; subList(int, int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.List java.util.ListIterator&lt;E&gt; listIterator(int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Map java.util.Collection&lt;V&gt; values()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Map java.util.Set&lt;K&gt; keySet()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Map java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Map void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.NavigableSet java.util.Iterator&lt;E&gt; descendingIterator()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.NavigableSet java.util.NavigableSet&lt;E&gt; descendingSet()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.NavigableSet java.util.NavigableSet&lt;E&gt; headSet(E, boolean)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.NavigableSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.NavigableSet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Objects T requireNonNull(T)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="value" val="&quot;null-&gt;fail&quot;" />
    </annotation>
  </item>
  <item name="java.util.Objects T requireNonNull(T, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="value" val="&quot;null,_-&gt;fail&quot;" />
    </annotation>
  </item>
  <item name="java.util.ResourceBundle boolean containsKey(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.lang.Object getObject(java.lang.String)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.lang.Object getObject(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.lang.Object handleGetObject(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.lang.String getString(java.lang.String)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.lang.String getString(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.lang.String[] getStringArray(java.lang.String)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.lang.String[] getStringArray(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.Enumeration&lt;java.lang.String&gt; getKeys()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader, java.util.ResourceBundle.Control) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader, java.util.ResourceBundle.Control) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader, java.util.ResourceBundle.Control) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader, java.util.ResourceBundle.Control) 3">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.util.ResourceBundle.Control) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.util.ResourceBundle.Control) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.util.ResourceBundle.Control) 2">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.ResourceBundle.Control) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.ResourceBundle.Control) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.Set&lt;java.lang.String&gt; handleKeySet()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle java.util.Set&lt;java.lang.String&gt; keySet()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.ResourceBundle void clearCache(java.lang.ClassLoader) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.io.File) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.io.File, java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.io.File, java.lang.String) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.io.InputStream) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.io.InputStream, java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.io.InputStream, java.lang.String) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.lang.Readable) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.nio.channels.ReadableByteChannel) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.nio.channels.ReadableByteChannel, java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner Scanner(java.nio.channels.ReadableByteChannel, java.lang.String) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner boolean hasNext(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner boolean hasNext(java.util.regex.Pattern) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.lang.String findInLine(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.lang.String findInLine(java.util.regex.Pattern) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.lang.String findWithinHorizon(java.lang.String, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.lang.String findWithinHorizon(java.util.regex.Pattern, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.lang.String next(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.lang.String next(java.util.regex.Pattern) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.util.Scanner skip(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.util.Scanner skip(java.util.regex.Pattern) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.util.Scanner useDelimiter(java.lang.String) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.util.Scanner useDelimiter(java.util.regex.Pattern) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Scanner java.util.Scanner useLocale(java.util.Locale) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Set T[] toArray(T[])">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Set T[] toArray(T[]) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Set boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Set boolean containsAll(java.util.Collection&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Set boolean removeAll(java.util.Collection&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Set boolean retainAll(java.util.Collection&lt;?&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Set java.lang.Object[] toArray()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Set java.util.Iterator&lt;E&gt; iterator()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.SortedMap java.util.SortedMap&lt;K,V&gt; headMap(K)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.SortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.SortedMap java.util.SortedMap&lt;K,V&gt; tailMap(K)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.SortedSet java.util.SortedSet&lt;E&gt; headSet(E)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.SortedSet java.util.SortedSet&lt;E&gt; subSet(E, E)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.SortedSet java.util.SortedSet&lt;E&gt; tailSet(E)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.TreeSet TreeSet(java.util.Collection&lt;? extends E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="java.util.Vector Vector(java.util.Collection&lt;? extends E&gt;) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
</root>

