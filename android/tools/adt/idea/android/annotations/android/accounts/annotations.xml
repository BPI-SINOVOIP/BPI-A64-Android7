<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="android.accounts.AbstractAccountAuthenticator android.os.Bundle addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.AbstractAccountAuthenticator android.os.Bundle getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse, android.accounts.Account) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.AbstractAccountAuthenticator android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse, android.accounts.Account)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.Account Account(android.os.Parcel) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.Account void writeToParcel(android.os.Parcel, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.AccountAuthenticatorResponse AccountAuthenticatorResponse(android.os.Parcel) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.AccountAuthenticatorResponse void onResult(android.os.Bundle) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.AccountAuthenticatorResponse void writeToParcel(android.os.Parcel, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.accounts.Account&gt; renameAccount(android.accounts.Account, java.lang.String, android.accounts.AccountManagerCallback&lt;android.accounts.Account&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.accounts.Account&gt; renameAccount(android.accounts.Account, java.lang.String, android.accounts.AccountManagerCallback&lt;android.accounts.Account&gt;, android.os.Handler) 1">
    <annotation name="android.support.annotation.Size">
      <val name="min" val="1" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.accounts.Account[]&gt; getAccountsByTypeAndFeatures(java.lang.String, java.lang.String[], android.accounts.AccountManagerCallback&lt;android.accounts.Account[]&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.GET_ACCOUNTS&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt; addAccount(java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.NonNull" />
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.MANAGE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt; confirmCredentials(android.accounts.Account, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.NonNull" />
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.MANAGE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt; editProperties(java.lang.String, android.app.Activity, android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.NonNull" />
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.MANAGE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt; getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.NonNull" />
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.USE_CREDENTIALS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt; getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, boolean, android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.NonNull" />
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.USE_CREDENTIALS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt; getAuthToken(android.accounts.Account, java.lang.String, boolean, android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.NonNull" />
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.USE_CREDENTIALS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt; getAuthTokenByFeatures(java.lang.String, java.lang.String, java.lang.String[], android.app.Activity, android.os.Bundle, android.os.Bundle, android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.MANAGE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt; removeAccount(android.accounts.Account, android.app.Activity, android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.MANAGE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt; updateCredentials(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.NonNull" />
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.MANAGE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;java.lang.Boolean&gt; hasFeatures(android.accounts.Account, java.lang.String[], android.accounts.AccountManagerCallback&lt;java.lang.Boolean&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.GET_ACCOUNTS&quot;" />
    </annotation>
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.AccountManager android.accounts.AccountManagerFuture&lt;java.lang.Boolean&gt; removeAccount(android.accounts.Account, android.accounts.AccountManagerCallback&lt;java.lang.Boolean&gt;, android.os.Handler)">
    <annotation name="android.support.annotation.NonNull" />
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.MANAGE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.Account[] getAccounts()">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.GET_ACCOUNTS&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.accounts.Account[] getAccountsByType(java.lang.String)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.GET_ACCOUNTS&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager android.content.Intent newChooseAccountIntent(android.accounts.Account, java.util.ArrayList&lt;android.accounts.Account&gt;, java.lang.String[], boolean, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.AccountManager boolean addAccountExplicitly(android.accounts.Account, java.lang.String, android.os.Bundle)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager boolean notifyAccountAuthenticated(android.accounts.Account)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager boolean removeAccountExplicitly(android.accounts.Account)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager java.lang.String blockingGetAuthToken(android.accounts.Account, java.lang.String, boolean)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.USE_CREDENTIALS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager java.lang.String getPassword(android.accounts.Account)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager java.lang.String getUserData(android.accounts.Account, java.lang.String)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager java.lang.String peekAuthToken(android.accounts.Account, java.lang.String)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener, android.os.Handler, boolean)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.GET_ACCOUNTS&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager void clearPassword(android.accounts.Account)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.MANAGE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager void invalidateAuthToken(java.lang.String, java.lang.String)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="anyOf" val="{&quot;android.permission.MANAGE_ACCOUNTS&quot;, &quot;android.permission.USE_CREDENTIALS&quot;}" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager void setAuthToken(android.accounts.Account, java.lang.String, java.lang.String)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager void setPassword(android.accounts.Account, java.lang.String)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AccountManager void setUserData(android.accounts.Account, java.lang.String, java.lang.String)">
    <annotation name="android.support.annotation.RequiresPermission">
      <val name="value" val="&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;" />
      <val name="apis" val="&quot;..22&quot;" />
    </annotation>
  </item>
  <item name="android.accounts.AuthenticatorDescription android.accounts.AuthenticatorDescription newKey(java.lang.String)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.accounts.AuthenticatorDescription void writeToParcel(android.os.Parcel, int) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
</root>

