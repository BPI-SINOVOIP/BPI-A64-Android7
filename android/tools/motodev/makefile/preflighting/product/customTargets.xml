<project name="Build specific targets and properties" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- Add on <ant> task for each top level element being built. -->
	<!-- ===================================================================== -->
	<available property="allElementsFile" file="${builder}/allElements.xml" value="${builder}/allElements.xml" />
	<property name="allElementsFile" location="${eclipse.pdebuild.templates}/headless-build/allElements.xml" />

	<import file="${allElementsFile}" />
	<target name="allElements">
		<antcall target="allElementsDelegator" />
	</target>

	<!-- ===================================================================== -->
	<!-- ===================================================================== -->
	<target name="getBaseComponents" depends="checkLocalBase" unless="skipBase">
		<get src="${eclipseBaseURL}" dest="${buildDirectory}/../temp-base.zip" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../temp-base.zip" />
	</target>

	<target name="checkLocalBase">
		<available file="${base}" property="skipBase" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for mapsCheckoutTag as desired. -->
	<!-- ===================================================================== -->
	<target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
		<property name="mapsCheckoutTag" value="HEAD" />
		<cvs cvsRoot="${mapsRepo}" package="${mapsRoot}" dest="${buildDirectory}/maps" tag="${mapsCheckoutTag}" />
	</target>

	<target name="checkLocalMaps">
		<available property="skipMaps" file="${buildDirectory}/maps" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/${mapsRoot}" command="tag ${mapsTagTag}" />
	</target>

	<!-- ===================================================================== -->

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features">
				<include name="**/*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">

		<copy todir="${buildDirectory}">
			<fileset dir="${SOURCE_DIR}/" includes="**/preflighting*/**" />
		</copy>
		<echo message="0=${timestamp}" file="${buildDirectory}/plugins/preflighting.core/about.mappings" />
		<echoxml file="${buildDirectory}/site.xml">
			<site>
				<feature url="features/${appValidatorFeatureName}.${appValidatorFeatureVersion}.jar" id="${appValidatorFeatureName}" version="${appValidatorFeatureVersion}">
					<category name="MOTODEVStudioforAndroid" />
				</feature>
				<category-def name="MOTODEVStudioforAndroid" label="MOTODEV Studio for Android" />
			</site>
		</echoxml>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<antcall target="getBaseComponents" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before the repositories are being processed -->
	<!-- ===================================================================== -->
	<target name="preProcessRepos">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the repositories have been processed -->
	<!-- ===================================================================== -->
	<target name="postProcessRepos">

	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
		<mkdir dir="${buildDirectory}/tmp/plugins" />
		<copy todir="${buildDirectory}/tmp/plugins">
			<fileset dir="${GIT_REPOSITORY_PATH}/android/docs/manuals/" includes="*.jar" />
		</copy>
		<delete>
			<fileset dir="${transformedRepoLocation}" includes="com.motorola*helpbase*" />
		</delete>
		<p2.generator append="true" source="${buildDirectory}/tmp/" artifactrepository="file:${transformedRepoLocation}" metadatarepository="file:${transformedRepoLocation}" publishartifacts="true" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running assemble. -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
		<copy todir="${transformedRepoLocation}/plugins" failonerror="false" overwrite="true">
			<fileset dir="${BASE_REPOSITORIES_DIR}/REPO_ADT/plugins/" includes="*.jar" />
		</copy>
		<copy todir="${transformedRepoLocation}/features" failonerror="false" overwrite="true">
			<fileset dir="${BASE_REPOSITORIES_DIR}/REPO_ADT/features/" includes="*.jar" />
		</copy>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running assemble. -->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running package. -->
	<!-- ===================================================================== -->
	<target name="prePackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running package. -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<antcall target="renameOutputs" />
		<antcall target="copyResults" />
	</target>

	<target name="renameOutputs">
		<move file="${buildDirectory}/${buildLabel}/${buildId}-linux.gtk.x86.zip" tofile="${buildDirectory}/${buildLabel}/${buildId}-linux.gtk.x86.tar.gz" />
		<move file="${buildDirectory}/${buildLabel}/${buildId}-linux.gtk.x86_64.zip" tofile="${buildDirectory}/${buildLabel}/${buildId}-linux.gtk.x86_64.tar.gz" />
		<move file="${buildDirectory}/${buildLabel}/${buildId}-macosx.cocoa.x86.zip" tofile="${buildDirectory}/${buildLabel}/${buildId}-macosx.cocoa.x86.tar.gz" />
		<move file="${buildDirectory}/${buildLabel}/${buildId}-macosx.cocoa.x86_64.zip" tofile="${buildDirectory}/${buildLabel}/${buildId}-macosx.cocoa.x86_64.tar.gz" />
	</target>

	<target name="copyResults" if="outputDirectory">
		<copy todir="${outputDirectory}">
			<fileset dir="${buildDirectory}/${buildLabel}" includes="**" excludes="compilelogs/" />
		</copy>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to test the build results -->
	<!-- ===================================================================== -->
	<target name="test">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
